{"ast":null,"code":"import _toConsumableArray from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  &:hover {\\n    background: #e1deff;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  background: #eeeeee;\\n  border-bottom-right-radius: 4px;\\n  border-bottom-left-radius: 4px;\\n  border: solid 1px #dbdbdb;\\n  border-top: none;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport { withBurner } from '@burner-wallet/ui-core';\nimport styled from 'styled-components';\nimport Popup from '../Popup';\nimport AddressInputAccount from './AddressInputAccount';\nvar DropdownContainer = styled.div(_templateObject());\nvar SuggestionContainer = styled.div(_templateObject2());\n\nvar SuggestedAddressDropdown = function SuggestedAddressDropdown(_ref) {\n  var search = _ref.search,\n      anchor = _ref.anchor,\n      pluginData = _ref.pluginData,\n      onSelect = _ref.onSelect;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      accounts = _useState2[0],\n      setAccounts = _useState2[1];\n\n  useEffect(function () {\n    var canceled = false;\n    Promise.all(pluginData.accountSearches.map(function (searchFn) {\n      return searchFn(search);\n    })).then(function (_accounts) {\n      if (!canceled) {\n        var _Array$prototype;\n\n        var flattenedAccounts = (_Array$prototype = Array.prototype).concat.apply(_Array$prototype, _toConsumableArray(_accounts));\n\n        setAccounts(flattenedAccounts);\n      }\n    });\n    return function () {\n      canceled = true;\n    };\n  }, [search]);\n\n  if (accounts.length === 0) {\n    return null;\n  }\n\n  return React.createElement(Popup, {\n    anchor: anchor\n  }, React.createElement(DropdownContainer, null, accounts.map(function (account) {\n    return React.createElement(SuggestionContainer, {\n      key: account.address,\n      onMouseDown: function onMouseDown() {\n        return onSelect(account);\n      }\n    }, React.createElement(AddressInputAccount, {\n      account: account\n    }));\n  })));\n};\n\nexport default withBurner(SuggestedAddressDropdown);","map":null,"metadata":{},"sourceType":"module"}