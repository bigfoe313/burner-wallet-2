{"ast":null,"code":"\"use strict\";\n\nvar _possibleConstructorReturn = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _classCallCheck = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar Semaphore =\n/*#__PURE__*/\nfunction () {\n  function Semaphore(count) {\n    _classCallCheck(this, Semaphore);\n\n    this.tasks = [];\n    this.count = count;\n  }\n\n  _createClass(Semaphore, [{\n    key: \"sched\",\n    value: function sched() {\n      if (this.count > 0 && this.tasks.length > 0) {\n        this.count--;\n        var next = this.tasks.shift();\n\n        if (next === undefined) {\n          throw \"Unexpected undefined value in tasks list\";\n        }\n\n        next();\n      }\n    }\n  }, {\n    key: \"acquire\",\n    value: function acquire() {\n      var _this = this;\n\n      return new Promise(function (res, rej) {\n        var task = function task() {\n          var released = false;\n          res(function () {\n            if (!released) {\n              released = true;\n              _this.count++;\n\n              _this.sched();\n            }\n          });\n        };\n\n        _this.tasks.push(task);\n\n        if (process && process.nextTick) {\n          process.nextTick(_this.sched.bind(_this));\n        } else {\n          setImmediate(_this.sched.bind(_this));\n        }\n      });\n    }\n  }, {\n    key: \"use\",\n    value: function use(f) {\n      return this.acquire().then(function (release) {\n        return f().then(function (res) {\n          release();\n          return res;\n        }).catch(function (err) {\n          release();\n          throw err;\n        });\n      });\n    }\n  }]);\n\n  return Semaphore;\n}();\n\nexports.Semaphore = Semaphore;\n\nvar Mutex =\n/*#__PURE__*/\nfunction (_Semaphore) {\n  _inherits(Mutex, _Semaphore);\n\n  function Mutex() {\n    _classCallCheck(this, Mutex);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Mutex).call(this, 1));\n  }\n\n  return Mutex;\n}(Semaphore);\n\nexports.Mutex = Mutex;","map":null,"metadata":{},"sourceType":"script"}