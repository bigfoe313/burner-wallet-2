{"ast":null,"code":"import _slicedToArray from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 106px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { withBurner, DataProviders } from '@burner-wallet/ui-core';\nimport Address from '../../components/Address';\nimport Button from '../../components/Button';\nimport Page from '../../components/Page';\nimport LineItem from '../../components/LineItem';\nvar TransactionDetails = DataProviders.TransactionDetails;\nvar BigEmoji = styled.div(_templateObject());\n\nvar formatDate = function formatDate(timestamp) {\n  return new Date(timestamp * 1000).toLocaleString();\n};\n\nvar ReceiptPage = function ReceiptPage(_ref) {\n  var match = _ref.match,\n      defaultAccount = _ref.defaultAccount,\n      assets = _ref.assets,\n      t = _ref.t;\n  return React.createElement(Page, {\n    title: t('Transaction Receipt')\n  }, React.createElement(TransactionDetails, {\n    asset: match.params.asset,\n    txHash: match.params.txHash,\n    render: function render(tx) {\n      if (!tx) {\n        return React.createElement(\"section\", null, React.createElement(BigEmoji, null, \"\\uD83D\\uDD0E\"), React.createElement(\"div\", null, \"Transaction not found...\"), React.createElement(\"div\", null, \"The transaction may still be propogating\"));\n      }\n\n      var _assets$filter = assets.filter(function (_asset) {\n        return _asset.id === tx.asset;\n      }),\n          _assets$filter2 = _slicedToArray(_assets$filter, 1),\n          asset = _assets$filter2[0];\n\n      var amtValue = asset ? \"\".concat(asset.getDisplayValue(tx.value), \" \").concat(asset.name) : \"\".concat(tx.displayValue, \" (unknown asset)\");\n      var date = formatDate(tx.timestamp);\n      var isSent = defaultAccount.toLowerCase() === tx.from.toLowerCase();\n      return React.createElement(\"section\", null, React.createElement(\"div\", null, React.createElement(LineItem, {\n        name: t('From'),\n        value: React.createElement(Address, {\n          address: tx.from\n        })\n      }), React.createElement(LineItem, {\n        name: t('To'),\n        value: React.createElement(Address, {\n          address: tx.to\n        })\n      }), React.createElement(LineItem, {\n        name: t('Date'),\n        value: date\n      })), React.createElement(\"div\", null, React.createElement(\"h2\", null, isSent ? t('Sent') : t('Received')), React.createElement(\"div\", null, amtValue)), tx.message && React.createElement(\"div\", null, React.createElement(\"h2\", null, t('Note')), React.createElement(\"div\", null, tx.message)));\n    }\n  }), React.createElement(Button, {\n    to: \"/\"\n  }, t('Back')));\n};\n\nexport default withBurner(ReceiptPage);","map":null,"metadata":{},"sourceType":"module"}