{"ast":null,"code":"var _slicedToArray = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _regeneratorRuntime = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require('web3-utils'),\n    fromWei = _require.fromWei,\n    toWei = _require.toWei,\n    toBN = _require.toBN;\n\nvar pricefeed = require('./pricefeed');\n\nvar _require2 = require('./utils/decimals'),\n    toDecimal = _require2.toDecimal;\n\nvar PRICE_POLL_INTERVAL = 15 * 1000;\n\nvar Asset =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function Asset(_ref) {\n    var id = _ref.id,\n        name = _ref.name,\n        network = _ref.network,\n        usdPrice = _ref.usdPrice,\n        priceSymbol = _ref.priceSymbol,\n        _ref$icon = _ref.icon,\n        icon = _ref$icon === void 0 ? null : _ref$icon,\n        _ref$type = _ref.type,\n        type = _ref$type === void 0 ? null : _ref$type,\n        _ref$decimals = _ref.decimals,\n        decimals = _ref$decimals === void 0 ? 18 : _ref$decimals;\n\n    _classCallCheck(this, Asset);\n\n    this.id = id;\n    this.name = name;\n    this.network = network;\n    this.usdPrice = usdPrice;\n    this.priceSymbol = priceSymbol;\n    this.type = type;\n    this.icon = icon;\n    this.decimals = decimals;\n    this.cleanupFunctions = [];\n  }\n\n  _createClass(Asset, [{\n    key: \"setCore\",\n    value: function setCore(core) {\n      this.core = core;\n    }\n  }, {\n    key: \"supportsMessages\",\n    value: function supportsMessages() {\n      return false;\n    }\n  }, {\n    key: \"getTx\",\n    value: function () {\n      var _getTx = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(txHash) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                throw new Error('Not implemented');\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getTx(_x) {\n        return _getTx.apply(this, arguments);\n      }\n\n      return getTx;\n    }()\n  }, {\n    key: \"getDisplayValue\",\n    value: function getDisplayValue(value) {\n      var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n      var displayVal = toDecimal(value.toString(), this.decimals);\n\n      if (displayVal.indexOf('.') !== -1) {\n        return displayVal.substr(0, displayVal.indexOf('.') + decimals + 1);\n      }\n\n      return displayVal;\n    }\n  }, {\n    key: \"getUSDValue\",\n    value: function getUSDValue(value) {\n      var decimals = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n\n      if (this.usdPrice) {\n        return (+this.getDisplayValue(value, 10) * this.usdPrice).toFixed(decimals);\n      }\n\n      throw new Error('USD price not available');\n    }\n  }, {\n    key: \"getBalance\",\n    value: function () {\n      var _getBalance = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(account) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                throw new Error('getBalance not implemented');\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getBalance(_x2) {\n        return _getBalance.apply(this, arguments);\n      }\n\n      return getBalance;\n    }()\n  }, {\n    key: \"getDisplayBalance\",\n    value: function () {\n      var _getDisplayBalance = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(account) {\n        var decimals,\n            balance,\n            _args3 = arguments;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                decimals = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : 2;\n                _context3.next = 3;\n                return this.getBalance(account);\n\n              case 3:\n                balance = _context3.sent;\n                return _context3.abrupt(\"return\", this.getDisplayValue(balance, decimals));\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getDisplayBalance(_x3) {\n        return _getDisplayBalance.apply(this, arguments);\n      }\n\n      return getDisplayBalance;\n    }()\n  }, {\n    key: \"getUSDBalance\",\n    value: function () {\n      var _getUSDBalance = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(account) {\n        var decimals,\n            balance,\n            _args4 = arguments;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                decimals = _args4.length > 1 && _args4[1] !== undefined ? _args4[1] : 2;\n                _context4.next = 3;\n                return this.getBalance(account);\n\n              case 3:\n                balance = _context4.sent;\n                return _context4.abrupt(\"return\", this.getUSDValue(balance, decimals));\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getUSDBalance(_x4) {\n        return _getUSDBalance.apply(this, arguments);\n      }\n\n      return getUSDBalance;\n    }()\n  }, {\n    key: \"startWatchingAddress\",\n    value: function startWatchingAddress(address) {\n      throw new Error('watching not implemented');\n    }\n  }, {\n    key: \"send\",\n    value: function () {\n      var _send2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(params) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                if (params.ether) {\n                  params.value = toWei(params.ether, 'ether');\n                  delete params.ether;\n                }\n\n                _context5.next = 3;\n                return this._send(params);\n\n              case 3:\n                response = _context5.sent;\n                this.core.addHistoryEvent({\n                  id: response.id,\n                  asset: this.id,\n                  type: 'send',\n                  value: params.value,\n                  from: params.from,\n                  to: params.to,\n                  tx: response.txHash,\n                  // Chose between this and transactionshash\n                  message: params.message || null,\n                  timestamp: Math.floor(Date.now() / 1000)\n                });\n                return _context5.abrupt(\"return\", response);\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function send(_x5) {\n        return _send2.apply(this, arguments);\n      }\n\n      return send;\n    }()\n  }, {\n    key: \"getMaximumSendableBalance\",\n    value: function () {\n      var _getMaximumSendableBalance = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(address) {\n        var recipient,\n            _ref2,\n            _ref3,\n            balance,\n            sendFee,\n            maximum,\n            _args6 = arguments;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                recipient = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : '0x1111111111111111111111111111111111111111';\n                _context6.next = 3;\n                return Promise.all([this.getBalance(address), this.getSendFee(address, recipient)]);\n\n              case 3:\n                _ref2 = _context6.sent;\n                _ref3 = _slicedToArray(_ref2, 2);\n                balance = _ref3[0];\n                sendFee = _ref3[1];\n                maximum = toBN(balance).sub(toBN(sendFee)).toString();\n\n                if (!(maximum.charAt(0) === '-')) {\n                  _context6.next = 10;\n                  break;\n                }\n\n                return _context6.abrupt(\"return\", '0');\n\n              case 10:\n                return _context6.abrupt(\"return\", maximum);\n\n              case 11:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getMaximumSendableBalance(_x6) {\n        return _getMaximumSendableBalance.apply(this, arguments);\n      }\n\n      return getMaximumSendableBalance;\n    }()\n  }, {\n    key: \"getSendFee\",\n    value: function () {\n      var _getSendFee = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7() {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", '0');\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7);\n      }));\n\n      function getSendFee() {\n        return _getSendFee.apply(this, arguments);\n      }\n\n      return getSendFee;\n    }()\n  }, {\n    key: \"getGrowthRate\",\n    value: function () {\n      var _getGrowthRate = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8() {\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                return _context8.abrupt(\"return\", '0');\n\n              case 1:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8);\n      }));\n\n      function getGrowthRate() {\n        return _getGrowthRate.apply(this, arguments);\n      }\n\n      return getGrowthRate;\n    }()\n  }, {\n    key: \"_send\",\n    value: function () {\n      var _send3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee9(_ref4) {\n        var from, to, value;\n        return _regeneratorRuntime.wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                from = _ref4.from, to = _ref4.to, value = _ref4.value;\n                throw new Error('send not implemented');\n\n              case 2:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9);\n      }));\n\n      function _send(_x7) {\n        return _send3.apply(this, arguments);\n      }\n\n      return _send;\n    }()\n  }, {\n    key: \"_startPricePolling\",\n    value: function () {\n      var _startPricePolling2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee11() {\n        var _this = this;\n\n        var interval;\n        return _regeneratorRuntime.wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                interval = setInterval(\n                /*#__PURE__*/\n                _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee10() {\n                  return _regeneratorRuntime.wrap(function _callee10$(_context10) {\n                    while (1) {\n                      switch (_context10.prev = _context10.next) {\n                        case 0:\n                          _context10.next = 2;\n                          return pricefeed.getPrice(_this.priceSymbol);\n\n                        case 2:\n                          _this.usdPrice = _context10.sent;\n\n                        case 3:\n                        case \"end\":\n                          return _context10.stop();\n                      }\n                    }\n                  }, _callee10);\n                })), PRICE_POLL_INTERVAL);\n                this.cleanupFunctions.push(function () {\n                  return clearInterval(interval);\n                });\n                _context11.next = 4;\n                return pricefeed.getPrice(this.priceSymbol);\n\n              case 4:\n                this.usdPrice = _context11.sent;\n\n              case 5:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this);\n      }));\n\n      function _startPricePolling() {\n        return _startPricePolling2.apply(this, arguments);\n      }\n\n      return _startPricePolling;\n    }()\n  }, {\n    key: \"getWeb3\",\n    value: function getWeb3(options) {\n      return this.core.getWeb3(this.network, options);\n    }\n  }, {\n    key: \"_getBlockTimestamp\",\n    value: function () {\n      var _getBlockTimestamp2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee12(blockNum) {\n        var block;\n        return _regeneratorRuntime.wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                _context12.next = 2;\n                return this.getWeb3().eth.getBlock(blockNum);\n\n              case 2:\n                block = _context12.sent;\n                return _context12.abrupt(\"return\", block.timestamp);\n\n              case 4:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this);\n      }));\n\n      function _getBlockTimestamp(_x8) {\n        return _getBlockTimestamp2.apply(this, arguments);\n      }\n\n      return _getBlockTimestamp;\n    }()\n  }, {\n    key: \"start\",\n    value: function start() {\n      if (this.priceSymbol) {\n        this._startPricePolling();\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.cleanupFunctions.forEach(function (fn) {\n        return fn();\n      });\n    }\n  }, {\n    key: \"poll\",\n    value: function poll(callback, interval) {\n      var running = true;\n\n      var loop =\n      /*#__PURE__*/\n      function () {\n        var _ref6 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee13() {\n          return _regeneratorRuntime.wrap(function _callee13$(_context13) {\n            while (1) {\n              switch (_context13.prev = _context13.next) {\n                case 0:\n                  if (running) {\n                    _context13.next = 2;\n                    break;\n                  }\n\n                  return _context13.abrupt(\"return\");\n\n                case 2:\n                  _context13.prev = 2;\n                  _context13.next = 5;\n                  return callback();\n\n                case 5:\n                  _context13.next = 10;\n                  break;\n\n                case 7:\n                  _context13.prev = 7;\n                  _context13.t0 = _context13[\"catch\"](2);\n                  console.warn('Error in loop', _context13.t0);\n\n                case 10:\n                  setTimeout(loop, interval);\n\n                case 11:\n                case \"end\":\n                  return _context13.stop();\n              }\n            }\n          }, _callee13, null, [[2, 7]]);\n        }));\n\n        return function loop() {\n          return _ref6.apply(this, arguments);\n        };\n      }();\n\n      loop();\n\n      var unsubscribe = function unsubscribe() {\n        running = false;\n      };\n\n      this.cleanupFunctions.push(unsubscribe);\n      return unsubscribe;\n    }\n  }]);\n\n  return Asset;\n}();\n\nmodule.exports = Asset;","map":null,"metadata":{},"sourceType":"script"}