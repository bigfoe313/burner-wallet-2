{"ast":null,"code":"var _regeneratorRuntime = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _get = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/get\");\n\nvar _inherits = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar NativeAsset = require('./NativeAsset');\n\nvar IXDaiBridge = require('./abi/IXDaiBridge.json');\n\nvar XDaiNativeAsset =\n/*#__PURE__*/\nfunction (_NativeAsset) {\n  \"use strict\";\n\n  _inherits(XDaiNativeAsset, _NativeAsset);\n\n  function XDaiNativeAsset(props) {\n    var _this;\n\n    _classCallCheck(this, XDaiNativeAsset);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(XDaiNativeAsset).call(this, props));\n    _this.bridgeAddress = '0x7301cfa0e1756b71869e93d4e4dca5c7d0eb0aa6';\n    return _this;\n  }\n\n  _createClass(XDaiNativeAsset, [{\n    key: \"scanBlocks\",\n    value: function () {\n      var _scanBlocks = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(address, fromBlock, toBlock) {\n        var web3, contract, events, filteredEvents, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, event;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _get(_getPrototypeOf(XDaiNativeAsset.prototype), \"scanBlocks\", this).call(this, address, fromBlock, toBlock);\n\n              case 2:\n                web3 = this.getWeb3();\n                contract = new web3.eth.Contract(IXDaiBridge, this.bridgeAddress);\n                _context.next = 6;\n                return contract.getPastEvents('AffirmationCompleted', {\n                  fromBlock: fromBlock,\n                  toBlock: toBlock\n                });\n\n              case 6:\n                events = _context.sent;\n                filteredEvents = events.filter(function (event) {\n                  return event.returnValues.recipient.toLowerCase() === address.toLowerCase();\n                });\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context.prev = 11;\n                _iterator = filteredEvents[Symbol.iterator]();\n\n              case 13:\n                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                  _context.next = 30;\n                  break;\n                }\n\n                event = _step.value;\n                _context.t0 = this.core;\n                _context.t1 = \"\".concat(event.transactionHash, \"-\").concat(event.logIndex);\n                _context.t2 = this.id;\n                _context.t3 = event.returnValues.value.toString();\n                _context.t4 = this.bridgeAddress;\n                _context.t5 = event.returnValues.recipient;\n                _context.t6 = event.transactionHash;\n                _context.next = 24;\n                return this._getBlockTimestamp(event.blockNumber);\n\n              case 24:\n                _context.t7 = _context.sent;\n                _context.t8 = {\n                  id: _context.t1,\n                  asset: _context.t2,\n                  type: 'send',\n                  value: _context.t3,\n                  from: _context.t4,\n                  to: _context.t5,\n                  tx: _context.t6,\n                  timestamp: _context.t7\n                };\n\n                _context.t0.addHistoryEvent.call(_context.t0, _context.t8);\n\n              case 27:\n                _iteratorNormalCompletion = true;\n                _context.next = 13;\n                break;\n\n              case 30:\n                _context.next = 36;\n                break;\n\n              case 32:\n                _context.prev = 32;\n                _context.t9 = _context[\"catch\"](11);\n                _didIteratorError = true;\n                _iteratorError = _context.t9;\n\n              case 36:\n                _context.prev = 36;\n                _context.prev = 37;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 39:\n                _context.prev = 39;\n\n                if (!_didIteratorError) {\n                  _context.next = 42;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 42:\n                return _context.finish(39);\n\n              case 43:\n                return _context.finish(36);\n\n              case 44:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[11, 32, 36, 44], [37,, 39, 43]]);\n      }));\n\n      function scanBlocks(_x, _x2, _x3) {\n        return _scanBlocks.apply(this, arguments);\n      }\n\n      return scanBlocks;\n    }()\n  }, {\n    key: \"getTx\",\n    value: function () {\n      var _getTx = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(txHash) {\n        var historyEvents, eventMatch;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                historyEvents = this.core.getHistoryEvents({\n                  asset: this.id,\n                  account: this.bridgeAddress\n                });\n                eventMatch = historyEvents.filter(function (e) {\n                  return e.tx === txHash;\n                });\n\n                if (!(eventMatch.length > 0)) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", eventMatch[0]);\n\n              case 6:\n                return _context2.abrupt(\"return\", _get(_getPrototypeOf(XDaiNativeAsset.prototype), \"getTx\", this).call(this, txHash));\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getTx(_x4) {\n        return _getTx.apply(this, arguments);\n      }\n\n      return getTx;\n    }()\n  }]);\n\n  return XDaiNativeAsset;\n}(NativeAsset);\n\nmodule.exports = new XDaiNativeAsset({\n  id: 'xdai',\n  name: 'xDai',\n  network: '100',\n  usdPrice: 1,\n  icon: 'https://static.burnerfactory.com/icons/xdai.svg'\n});","map":null,"metadata":{},"sourceType":"script"}