{"ast":null,"code":"import _regeneratorRuntime from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport { useBurner } from '../BurnerProvider';\nvar POLL_INTERVAL = 1000;\nvar CACHE_EXPIRATION = 3000;\nvar balanceCache = {};\n\nvar getCache = function getCache(key) {\n  return balanceCache[key] && Date.now() - balanceCache[key].timestamp < CACHE_EXPIRATION ? balanceCache[key] : null;\n};\n\nvar setCache = function setCache(key, val) {\n  balanceCache[key] = _objectSpread({}, val, {\n    timestamp: Date.now()\n  });\n};\n\nvar getBalance =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(asset, account) {\n    var cacheKey, cachedVal, _ref2, _ref3, balance, maximumSendableBalance, growthRate, returnVal;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            cacheKey = \"\".concat(asset.id, \"-\").concat(account);\n            cachedVal = getCache(cacheKey);\n\n            if (!cachedVal) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", cachedVal);\n\n          case 4:\n            _context.next = 6;\n            return Promise.all([asset.getBalance(account), asset.getMaximumSendableBalance(account), asset.getGrowthRate ? asset.getGrowthRate(account) : Promise.resolve('0')]);\n\n          case 6:\n            _ref2 = _context.sent;\n            _ref3 = _slicedToArray(_ref2, 3);\n            balance = _ref3[0];\n            maximumSendableBalance = _ref3[1];\n            growthRate = _ref3[2];\n            returnVal = {\n              balance: balance,\n              maximumSendableBalance: maximumSendableBalance,\n              growthRate: growthRate\n            };\n            setCache(cacheKey, returnVal);\n            return _context.abrupt(\"return\", returnVal);\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getBalance(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar AccountBalance = function AccountBalance(_ref4) {\n  var render = _ref4.render,\n      asset = _ref4.asset,\n      account = _ref4.account;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var dataRef = useRef(null);\n\n  var _isMounted = useRef(true);\n\n  var timer = useRef(null);\n\n  var _useBurner = useBurner(),\n      assets = _useBurner.assets,\n      defaultAccount = _useBurner.defaultAccount;\n\n  var _account = account || defaultAccount;\n\n  var getAsset = function getAsset() {\n    if (typeof asset !== 'string') {\n      return asset;\n    }\n\n    var assetList = assets.filter(function (_asset) {\n      return _asset.id == asset;\n    });\n\n    if (assetList.length == 0) {\n      throw new Error(\"Unable to find asset \".concat(asset));\n    }\n\n    return assetList[0];\n  };\n\n  var fetchData =\n  /*#__PURE__*/\n  function () {\n    var _ref5 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var _asset, _ref6, balance, maximumSendableBalance, growthRate, usdBalance, _data;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _asset = getAsset();\n              _context2.next = 4;\n              return getBalance(_asset, _account);\n\n            case 4:\n              _ref6 = _context2.sent;\n              balance = _ref6.balance;\n              maximumSendableBalance = _ref6.maximumSendableBalance;\n              growthRate = _ref6.growthRate;\n\n              if (_isMounted.current) {\n                _context2.next = 10;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 10:\n              usdBalance = null;\n\n              try {\n                usdBalance = _asset.getUSDValue(balance);\n              } catch (e) {}\n\n              _data = {\n                asset: _asset,\n                balance: balance,\n                displayBalance: _asset.getDisplayValue(balance),\n                maximumSendableBalance: maximumSendableBalance,\n                displayMaximumSendableBalance: _asset.getDisplayValue(maximumSendableBalance),\n                usdBalance: usdBalance,\n                growthRate: growthRate\n              };\n\n              if (!dataRef.current || _data.balance !== dataRef.current.balance || _data.usdBalance !== dataRef.current.usdBalance) {\n                setData(_data);\n                dataRef.current = _data;\n              }\n\n              _context2.next = 19;\n              break;\n\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.warn('[AccountBalance]', _context2.t0);\n\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 16]]);\n    }));\n\n    return function fetchData() {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    fetchData();\n    var running = true;\n\n    var poll =\n    /*#__PURE__*/\n    function () {\n      var _ref7 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return fetchData();\n\n              case 2:\n                if (running) {\n                  timer.current = window.setTimeout(poll, POLL_INTERVAL);\n                }\n\n              case 3:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      return function poll() {\n        return _ref7.apply(this, arguments);\n      };\n    }();\n\n    poll();\n    return function () {\n      running = false;\n\n      if (timer.current) {\n        window.clearTimeout(timer.current);\n      }\n    };\n  }, [_account, asset]);\n  useEffect(function () {\n    return function () {\n      _isMounted.current = false;\n    };\n  }, []);\n  return React.createElement(Fragment, null, render(data));\n};\n\nexport default AccountBalance;","map":null,"metadata":{},"sourceType":"module"}