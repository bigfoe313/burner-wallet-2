{"ast":null,"code":"var _regeneratorRuntime = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _defineProperty = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _asyncToGenerator = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar Web3 = require('web3');\n\nvar _require = require('web3-utils'),\n    toBN = _require.toBN;\n\nvar cookies = require('../lib/cookies');\n\nvar Signer = require('./Signer');\n\nvar LocalSigner =\n/*#__PURE__*/\nfunction (_Signer) {\n  \"use strict\";\n\n  _inherits(LocalSigner, _Signer);\n\n  function LocalSigner() {\n    var _this;\n\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        privateKey = _ref.privateKey,\n        _ref$saveKey = _ref.saveKey,\n        saveKey = _ref$saveKey === void 0 ? true : _ref$saveKey,\n        _ref$gasMultiplier = _ref.gasMultiplier,\n        gasMultiplier = _ref$gasMultiplier === void 0 ? 1 : _ref$gasMultiplier;\n\n    _classCallCheck(this, LocalSigner);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LocalSigner).call(this, {\n      id: 'local'\n    }));\n    _this._saveKey = saveKey;\n    _this.gasMultiplier = gasMultiplier;\n\n    if (_this._isValidPK(privateKey)) {\n      _this._generateAccountFromPK(privateKey);\n    } else {\n      _this._loadOrGenerateAccount();\n    }\n\n    return _this;\n  }\n\n  _createClass(LocalSigner, [{\n    key: \"getAccounts\",\n    value: function getAccounts() {\n      return [this.account.address];\n    }\n  }, {\n    key: \"signTx\",\n    value: function () {\n      var _signTx = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(tx) {\n        var _tx, multiplier, _ref2, rawTransaction;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _tx = _objectSpread({}, tx, {\n                  // Workaround for https://github.com/ethereumjs/ethereumjs-tx/pull/195\n                  common: {\n                    customChain: {\n                      chainId: tx.chainId,\n                      networkId: tx.chainId\n                    },\n                    hardfork: 'istanbul'\n                  }\n                });\n\n                if (this.gasMultiplier !== 1) {\n                  multiplier = Math.floor(this.gasMultiplier * 1000).toString();\n                  _tx.gas = toBN(tx.gas).mul(toBN(multiplier)).div(toBN('1000'));\n                }\n\n                _context.next = 4;\n                return this.account.signTransaction(_tx);\n\n              case 4:\n                _ref2 = _context.sent;\n                rawTransaction = _ref2.rawTransaction;\n                _tx.signedTransaction = rawTransaction;\n                return _context.abrupt(\"return\", _tx);\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function signTx(_x) {\n        return _signTx.apply(this, arguments);\n      }\n\n      return signTx;\n    }()\n  }, {\n    key: \"signMsg\",\n    value: function () {\n      var _signMsg = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(msg) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this.account.sign(msg).signature);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function signMsg(_x2) {\n        return _signMsg.apply(this, arguments);\n      }\n\n      return signMsg;\n    }()\n  }, {\n    key: \"permissions\",\n    value: function permissions() {\n      return ['readKey', 'writeKey', 'burn', 'keyToAddress'];\n    }\n  }, {\n    key: \"invoke\",\n    value: function invoke(action, account) {\n      if (!this.hasAccount(account)) {\n        throw new Error('Can not call invoke, incorrect account');\n      }\n\n      for (var _len = arguments.length, params = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n        params[_key - 2] = arguments[_key];\n      }\n\n      switch (action) {\n        case 'readKey':\n          return this.account.privateKey;\n\n        case 'writeKey':\n          var newPK = params[0];\n\n          this._generateAccountFromPK(newPK);\n\n          return this.account.address;\n\n        case 'burn':\n          this._generateNewAccount();\n\n          return this.account.address;\n\n        case 'keyToAddress':\n          var pk = params[0];\n\n          var _eth$accounts$private = new Web3().eth.accounts.privateKeyToAccount(pk),\n              address = _eth$accounts$private.address;\n\n          return address;\n\n        default:\n          throw new Error(\"Unknown action \".concat(action));\n      }\n    }\n  }, {\n    key: \"_isValidPK\",\n    value: function _isValidPK(pk) {\n      return !!pk && parseInt(pk) > 0;\n    }\n  }, {\n    key: \"_loadOrGenerateAccount\",\n    value: function _loadOrGenerateAccount() {\n      var pk = window.localStorage && localStorage.getItem('metaPrivateKey') || cookies.getCookie('metaPrivateKey');\n\n      if (this._isValidPK(pk)) {\n        this._generateAccountFromPK(pk);\n      } else {\n        this._generateNewAccount();\n      }\n    }\n  }, {\n    key: \"_generateAccountFromPK\",\n    value: function _generateAccountFromPK(privateKey) {\n      this.account = new Web3().eth.accounts.privateKeyToAccount(privateKey);\n\n      this._saveAccount();\n\n      this.events.emit('accountChange');\n    }\n  }, {\n    key: \"_generateNewAccount\",\n    value: function _generateNewAccount() {\n      this.account = new Web3().eth.accounts.create();\n\n      this._saveAccount();\n\n      this.events.emit('accountChange');\n    }\n  }, {\n    key: \"_saveAccount\",\n    value: function _saveAccount() {\n      if (!this._saveKey) {\n        return;\n      }\n\n      var privateKey = this.account.privateKey;\n\n      if (!privateKey || !/^0x[0-9a-fA-F]{64}$/.test(privateKey)) {\n        throw new Error(\"Invalid Private Key \\\"\".concat(privateKey, \"\\\"\"));\n      }\n\n      if (window.localStorage) {\n        localStorage.setItem('metaPrivateKey', this.account.privateKey);\n      }\n\n      cookies.setCookie('metaPrivateKey', this.account.privateKey);\n    }\n  }]);\n\n  return LocalSigner;\n}(Signer);\n\nmodule.exports = LocalSigner;","map":null,"metadata":{},"sourceType":"script"}