{"ast":null,"code":"var _classCallCheck = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar Gateway = require('./Gateway');\n\nvar Web3 = require('web3');\n\nvar RivetGateway =\n/*#__PURE__*/\nfunction (_Gateway) {\n  \"use strict\";\n\n  _inherits(RivetGateway, _Gateway);\n\n  function RivetGateway(key) {\n    var _this;\n\n    _classCallCheck(this, RivetGateway);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(RivetGateway).call(this));\n    _this.available = !!key;\n\n    if (!key) {\n      console.warn('Warning: RivetGateway created without API Key. Rivet will be unavailable.');\n    }\n\n    _this.providerStrings = {\n      '1': \"https://eth.rpc.rivet.cloud/\".concat(key),\n      '3': \"https://ropsten.rpc.rivet.cloud/\".concat(key),\n      '4': \"https://rinkeby.rpc.rivet.cloud/\".concat(key),\n      '5': \"https://goerli.rpc.rivet.cloud/\".concat(key)\n    };\n    _this.providers = {};\n    return _this;\n  }\n\n  _createClass(RivetGateway, [{\n    key: \"isAvailable\",\n    value: function isAvailable() {\n      return this.available;\n    }\n  }, {\n    key: \"getNetworks\",\n    value: function getNetworks() {\n      return ['1', '3', '4', '5'];\n    }\n  }, {\n    key: \"_provider\",\n    value: function _provider(network) {\n      if (!this.providers[network]) {\n        if (!this.providerStrings[network]) {\n          throw new Error(\"Network \".concat(network, \" not supported by RivetGateway\"));\n        }\n\n        this.providers[network] = new Web3.providers.HttpProvider(this.providerStrings[network]);\n      }\n\n      return this.providers[network];\n    }\n  }, {\n    key: \"send\",\n    value: function send(network, payload) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (_this2.getNetworks().indexOf(network) === -1) {\n          return reject(new Error(\"Rivet Gateway does not support this network \\\"\".concat(network, \"\\\"\")));\n        }\n\n        _this2._provider(network).send(payload, function (err, response) {\n          if (err) {\n            return reject(err);\n          }\n\n          return resolve(response.result);\n        });\n      });\n    }\n  }]);\n\n  return RivetGateway;\n}(Gateway);\n\nmodule.exports = RivetGateway;","map":null,"metadata":{},"sourceType":"script"}