{"ast":null,"code":"import _regeneratorRuntime from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport MyPage from './ui/MyPage';\nimport MyElement from './ui/MyElement';\n\nvar MyPlugin =\n/*#__PURE__*/\nfunction () {\n  function MyPlugin() {\n    _classCallCheck(this, MyPlugin);\n  }\n\n  _createClass(MyPlugin, [{\n    key: \"initializePlugin\",\n    value: function initializePlugin(pluginContext) {\n      this.pluginContext = pluginContext;\n      pluginContext.addPage('/my-page', MyPage);\n      pluginContext.addButton('apps', 'A-Cash Exchange', '/my-page', {\n        description: 'Convert between Ethereum and A-Cash | Put A-Cash on Debit Card'\n      });\n      pluginContext.addElement('home-middle', MyElement);\n      pluginContext.onQRScanned(function (scannedQR, ctx) {\n        if (scannedQR === 'A-Cash Exchange') {\n          ctx.actions.navigateTo('/my-page');\n          return true;\n        }\n      });\n    }\n  }, {\n    key: \"getBlockNum\",\n    value: function () {\n      var _getBlockNum = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var assets, web3, blockNum;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                assets = this.pluginContext.getAssets();\n                web3 = this.pluginContext.getWeb3(assets[0].network);\n                blockNum = web3.eth.getBlockNumber();\n                return _context.abrupt(\"return\", blockNum);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getBlockNum() {\n        return _getBlockNum.apply(this, arguments);\n      }\n\n      return getBlockNum;\n    }()\n  }]);\n\n  return MyPlugin;\n}();\n\nexport { MyPlugin as default };","map":null,"metadata":{},"sourceType":"module"}