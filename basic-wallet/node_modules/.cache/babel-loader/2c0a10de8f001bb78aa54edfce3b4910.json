{"ast":null,"code":"import _taggedTemplateLiteral from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  min-height: 100%;\\n  max-width: 700px;\\n  margin: 0 auto;\\n  display: flex;\\n  flex-direction: column;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Fragment } from 'react';\nimport Color from 'color';\nimport styled, { ThemeProvider } from 'styled-components';\nimport GlobalStyles from './GlobalStyles';\nconst defaultTheme = {\n  background: '#ededed',\n  font: \"-apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif\",\n  titleFont: null,\n  accentColor: '#4E3FCE',\n  paperBackground: '#fafafa',\n  logo: null,\n  pageMargin: '16px'\n};\nconst Container = styled.div(_templateObject());\n\nconst makeTheme = theme => {\n  const accent = Color(theme.accentColor);\n  theme.accentLight = theme.accentLight || accent.lighten(0.5).hsl().string();\n  theme.accentDark = theme.accentDark || accent.darken(0.5).hsl().string();\n  theme.accentText = theme.accentText || accent.isDark() ? '#eeeeee' : '#111111';\n  return theme;\n};\n\nconst Template = ({\n  children,\n  theme\n}) => {\n  const mergedTheme = makeTheme({ ...defaultTheme,\n    ...theme\n  });\n  return React.createElement(Container, null, React.createElement(GlobalStyles, {\n    theme: mergedTheme\n  }), React.createElement(ThemeProvider, {\n    theme: mergedTheme\n  }, React.createElement(Fragment, null, children)));\n};\n\nexport default Template;","map":null,"metadata":{},"sourceType":"module"}