{"ast":null,"code":"const Gateway = require('./Gateway');\n\nconst Web3 = require('web3');\n\nclass xDaiGateway extends Gateway {\n  constructor() {\n    super();\n    this._w3Provider = null;\n  }\n\n  isAvailable() {\n    return true;\n  }\n\n  getNetworks() {\n    return ['100'];\n  }\n\n  _provider(network) {\n    if (!this._w3Provider) {\n      this._w3Provider = new Web3.providers.HttpProvider('https://dai.poa.network');\n      ;\n    }\n\n    return this._w3Provider;\n  }\n\n  send(network, payload) {\n    return new Promise((resolve, reject) => {\n      if (network !== '100') {\n        return reject(new Error('xDai does not support this network'));\n      }\n\n      if (payload.method === 'eth_gasPrice') {\n        return resolve('0x3b9aca00'); // 1 gwei\n      }\n\n      this._provider(network).send(payload, (err, response) => {\n        if (err) {\n          return reject(err);\n        } // Strange hack since the xdai relay seems to return a receipt for unmined txs\n\n\n        if (payload.method === 'eth_getTransactionReceipt' && response.result && !response.result.blockNumber) {\n          return resolve(null);\n        }\n\n        if (payload.method === 'eth_gasPrice' && response.result === '0x0') {\n          return resolve('0x3b9aca00'); // 1 gwei\n        }\n\n        return resolve(response.result);\n      });\n    });\n  }\n\n}\n\nmodule.exports = xDaiGateway;","map":null,"metadata":{},"sourceType":"script"}