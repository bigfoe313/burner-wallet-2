{"ast":null,"code":"var _classCallCheck = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar Gateway = require('./Gateway');\n\nvar InjectedGateway =\n/*#__PURE__*/\nfunction (_Gateway) {\n  \"use strict\";\n\n  _inherits(InjectedGateway, _Gateway);\n\n  function InjectedGateway() {\n    var _this;\n\n    _classCallCheck(this, InjectedGateway);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InjectedGateway).call(this));\n\n    var provider = _this._provider();\n\n    if (provider) {\n      provider.autoRefreshOnNetworkChange = false;\n    }\n\n    return _this;\n  }\n\n  _createClass(InjectedGateway, [{\n    key: \"isAvailable\",\n    value: function isAvailable() {\n      return !!this._provider();\n    }\n  }, {\n    key: \"getNetworks\",\n    value: function getNetworks() {\n      return [this._provider().networkVersion];\n    }\n  }, {\n    key: \"_provider\",\n    value: function _provider() {\n      return window.ethereum || window.web3 && window.web3.currentProvider;\n    }\n  }, {\n    key: \"send\",\n    value: function send(network, payload) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (network !== _this2._provider().networkVersion) {\n          return reject(new Error('This Gateway does not support the provided network'));\n        }\n\n        _this2._provider().sendAsync(payload, function (err, _ref) {\n          var result = _ref.result,\n              error = _ref.error;\n\n          if (err) {\n            reject(err || error);\n          } else {\n            resolve(result);\n          }\n        });\n      });\n    }\n  }]);\n\n  return InjectedGateway;\n}(Gateway);\n\nmodule.exports = InjectedGateway;","map":null,"metadata":{},"sourceType":"script"}