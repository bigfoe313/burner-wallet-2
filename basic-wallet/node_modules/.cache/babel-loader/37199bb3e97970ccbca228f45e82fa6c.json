{"ast":null,"code":"import _slicedToArray from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  margin-right: 8px;\\n  display: flex;\\n  position: absolute;\\n  right: 0px;\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  text-overflow: ellipsis;\\n  white-space: nowrap;\\n  overflow: none;\\n\\n  background-color: white;\\n  padding: 16px;\\n  width: 100%;\\n  height: 3rem;\\n  border: 1px;\\n  border-color: grey;\\n  border-radius: 1px;\\n  font-family: sans-serif;\\n  font-size: 1rem;\\n  outline: none;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  & {\\n    display: flex;\\n    flex-direction: row;\\n    align-items: center;\\n    width: 100%;\\n    position: relative;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Clipboard from '../../components/Clipboard';\nimport Button from '../../components/Button';\nconst StyledWrapper = styled.div(_templateObject());\nconst StyledInput = styled.input(_templateObject2());\nconst ButtonContainer = styled.div(_templateObject3());\n\nconst PrivateKeyField = ({\n  privateKey\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        visibleKey = _useState2[0],\n        setVisibleKey = _useState2[1];\n\n  return React.createElement(StyledWrapper, null, React.createElement(StyledInput, {\n    readOnly: true,\n    value: privateKey,\n    type: visibleKey ? 'text' : 'password',\n    onFocus: () => setVisibleKey(true),\n    onBlur: () => setVisibleKey(false)\n  }), React.createElement(ButtonContainer, null, React.createElement(Clipboard, {\n    text: privateKey\n  }, isCopied => React.createElement(Button, null, !isCopied ? 'Copy' : 'Copied!'))));\n};\n\nexport default PrivateKeyField;","map":null,"metadata":{},"sourceType":"module"}