{"ast":null,"code":"const Gateway = require('./Gateway');\n\nclass InjectedGateway extends Gateway {\n  constructor() {\n    super();\n\n    const provider = this._provider();\n\n    if (provider) {\n      provider.autoRefreshOnNetworkChange = false;\n    }\n  }\n\n  isAvailable() {\n    return !!this._provider();\n  }\n\n  getNetworks() {\n    return [this._provider().networkVersion];\n  }\n\n  _provider() {\n    return window.ethereum || window.web3 && window.web3.currentProvider;\n  }\n\n  send(network, payload) {\n    return new Promise((resolve, reject) => {\n      if (network !== this._provider().networkVersion) {\n        return reject(new Error('This Gateway does not support the provided network'));\n      }\n\n      this._provider().sendAsync(payload, (err, {\n        result,\n        error\n      }) => {\n        if (err) {\n          reject(err || error);\n        } else {\n          resolve(result);\n        }\n      });\n    });\n  }\n\n}\n\nmodule.exports = InjectedGateway;","map":null,"metadata":{},"sourceType":"script"}