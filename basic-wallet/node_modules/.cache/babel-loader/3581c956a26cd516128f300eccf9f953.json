{"ast":null,"code":"import { Component } from 'react';\nimport { withBurner } from '../BurnerProvider';\n\nclass AccountKeys extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      keys: null\n    };\n  }\n\n  componentDidMount() {\n    this.updateKeys();\n  }\n\n  componentDidUpdate(oldProps) {\n    if (this.props !== oldProps) {\n      this.updateKeys();\n    }\n  }\n\n  updateKeys() {\n    const _this$props = this.props,\n          account = _this$props.account,\n          accounts = _this$props.accounts,\n          actions = _this$props.actions;\n\n    if (accounts.indexOf(account) === -1 || !actions.canCallSigner('readKey', account)) {\n      this.setState({\n        keys: null\n      });\n      return;\n    }\n\n    const keys = {\n      privateKey: actions.callSigner('readKey', account),\n      burnAccount: () => actions.callSigner('burn', account)\n    };\n    this.setState({\n      keys\n    });\n  }\n\n  render() {\n    return this.props.render(this.state.keys);\n  }\n\n}\n\nexport default withBurner(AccountKeys);","map":null,"metadata":{},"sourceType":"module"}