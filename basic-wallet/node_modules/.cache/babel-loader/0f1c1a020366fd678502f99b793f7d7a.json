{"ast":null,"code":"import _regeneratorRuntime from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { Component } from 'react';\nimport { withBurner } from '../BurnerProvider';\n\nvar TransactionDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TransactionDetails, _Component);\n\n  function TransactionDetails(props) {\n    var _this;\n\n    _classCallCheck(this, TransactionDetails);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransactionDetails).call(this, props));\n    _this._mounted = false;\n    _this.state = {\n      tx: null\n    };\n    return _this;\n  }\n\n  _createClass(TransactionDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._mounted = true;\n      this.fetchData();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(oldProps) {\n      if (this.props !== oldProps) {\n        this.fetchData();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._mounted = false;\n    }\n  }, {\n    key: \"fetchData\",\n    value: function () {\n      var _fetchData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this2 = this;\n\n        var assetList, asset, tx;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                assetList = this.props.assets.filter(function (asset) {\n                  return asset.id == _this2.props.asset;\n                });\n\n                if (!(assetList.length == 0)) {\n                  _context.next = 4;\n                  break;\n                }\n\n                throw new Error(\"Unable to find asset \".concat(this.props.asset));\n\n              case 4:\n                asset = assetList[0];\n                _context.next = 7;\n                return asset.getTx(this.props.txHash);\n\n              case 7:\n                tx = _context.sent;\n\n                if (this._mounted) {\n                  this.setState({\n                    tx: tx\n                  });\n                  setTimeout(function () {\n                    return _this2.fetchData();\n                  }, 2500);\n                }\n\n                _context.next = 15;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                console.warn(_context.t0);\n                setTimeout(function () {\n                  return _this2.fetchData();\n                }, 2500);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 11]]);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.render(this.state.tx);\n    }\n  }]);\n\n  return TransactionDetails;\n}(Component);\n\nexport default withBurner(TransactionDetails);","map":null,"metadata":{},"sourceType":"module"}