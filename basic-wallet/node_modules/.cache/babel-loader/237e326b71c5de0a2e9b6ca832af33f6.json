{"ast":null,"code":"import _slicedToArray from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport ClipboardJS from 'clipboard';\n\nvar Clipboard = function Clipboard(_ref) {\n  var _text = _ref.text,\n      children = _ref.children;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isCopied = _useState2[0],\n      setIsCopied = _useState2[1];\n\n  var targetEl = useRef(null);\n  var timer = useRef(0);\n  useEffect(function () {\n    if (targetEl.current) {\n      var afterCopy = function afterCopy() {\n        setIsCopied(true);\n        clearTimeout(timer.current);\n        timer.current = window.setTimeout(function () {\n          return setIsCopied(false);\n        }, 1500);\n      };\n\n      var clipboard = new ClipboardJS(targetEl.current, {\n        text: function text() {\n          return _text;\n        }\n      });\n      clipboard.on('success', function () {\n        return afterCopy();\n      });\n      clipboard.on('error', function (e) {\n        return console.error('error: failed to copy text', e);\n      });\n      return function () {\n        clipboard.destroy();\n        clearTimeout(timer.current);\n      };\n    }\n  }, [targetEl.current]);\n  return React.createElement(\"div\", {\n    ref: targetEl\n  }, children(isCopied));\n};\n\nexport default Clipboard;","map":null,"metadata":{},"sourceType":"module"}