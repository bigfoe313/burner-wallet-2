{"ast":null,"code":"import _classCallCheck from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _regeneratorRuntime from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport Web3 from 'web3';\nimport Pair from './Pair';\nvar toBN = Web3.utils.toBN;\nvar UNISWAP_FACTORY_ADDRESS = '0xc0a47dfe034b400b47bdad5fecda2621de6c4d95';\nvar UNISWAP_NETWORK = '1';\nvar DEADLINE = 1742680400;\nvar _abis = null;\n\nvar getABI =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(contract) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (_abis) {\n              _context.next = 4;\n              break;\n            }\n\n            _context.next = 3;\n            return import('./abis');\n\n          case 3:\n            _abis = _context.sent;\n\n          case 4:\n            return _context.abrupt(\"return\", _abis[contract]);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getABI(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar Uniswap =\n/*#__PURE__*/\nfunction (_Pair) {\n  _inherits(Uniswap, _Pair);\n\n  function Uniswap(asset) {\n    var _this;\n\n    _classCallCheck(this, Uniswap);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Uniswap).call(this, {\n      assetA: asset,\n      assetB: 'eth'\n    }));\n    _this.exchangeAddress = null;\n    return _this;\n  }\n\n  _createClass(Uniswap, [{\n    key: \"getContract\",\n    value: function () {\n      var _getContract = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var web3, exchangeAddress, contract;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                web3 = this.getExchange().getWeb3(UNISWAP_NETWORK);\n                _context2.next = 3;\n                return this.getExchangeAddress();\n\n              case 3:\n                exchangeAddress = _context2.sent;\n                _context2.t0 = web3.eth.Contract;\n                _context2.next = 7;\n                return getABI('uniswapToken');\n\n              case 7:\n                _context2.t1 = _context2.sent;\n                _context2.t2 = exchangeAddress;\n                contract = new _context2.t0(_context2.t1, _context2.t2);\n                return _context2.abrupt(\"return\", contract);\n\n              case 11:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getContract() {\n        return _getContract.apply(this, arguments);\n      }\n\n      return getContract;\n    }()\n  }, {\n    key: \"getExchangeAddress\",\n    value: function () {\n      var _getExchangeAddress = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var web3, factoryContract, asset, exchangeAddress;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this.exchangeAddress) {\n                  _context3.next = 16;\n                  break;\n                }\n\n                web3 = this.getExchange().getWeb3(UNISWAP_NETWORK);\n                _context3.t0 = web3.eth.Contract;\n                _context3.next = 5;\n                return getABI('uniswapFactory');\n\n              case 5:\n                _context3.t1 = _context3.sent;\n                _context3.t2 = UNISWAP_FACTORY_ADDRESS;\n                factoryContract = new _context3.t0(_context3.t1, _context3.t2);\n                asset = this.getExchange().getAsset(this.assetA);\n                _context3.next = 11;\n                return factoryContract.methods.getExchange(asset.address).call();\n\n              case 11:\n                exchangeAddress = _context3.sent;\n\n                if (exchangeAddress) {\n                  _context3.next = 14;\n                  break;\n                }\n\n                throw new Error(\"Can not find Uniswap exchange for asset \".concat(this.assetA));\n\n              case 14:\n                console.log(\"Found Uniswap for \".concat(this.assetA, \" at \").concat(exchangeAddress));\n                this.exchangeAddress = exchangeAddress;\n\n              case 16:\n                return _context3.abrupt(\"return\", this.exchangeAddress);\n\n              case 17:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getExchangeAddress() {\n        return _getExchangeAddress.apply(this, arguments);\n      }\n\n      return getExchangeAddress;\n    }()\n  }, {\n    key: \"exchangeAtoB\",\n    value: function () {\n      var _exchangeAtoB = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(_ref2) {\n        var account, value, ether, _value, asset, contract, uniswapAllowance, allowanceReceipt;\n\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                account = _ref2.account, value = _ref2.value, ether = _ref2.ether;\n                _value = this._getValue({\n                  value: value,\n                  ether: ether\n                });\n                asset = this.getExchange().getAsset(this.assetA);\n                _context4.next = 5;\n                return this.getContract();\n\n              case 5:\n                contract = _context4.sent;\n                _context4.next = 8;\n                return asset.allowance(account, this.exchangeAddress);\n\n              case 8:\n                uniswapAllowance = _context4.sent;\n\n                if (!toBN(uniswapAllowance).lt(toBN(_value))) {\n                  _context4.next = 14;\n                  break;\n                }\n\n                _context4.next = 12;\n                return asset.approve(account, this.exchangeAddress, _value);\n\n              case 12:\n                allowanceReceipt = _context4.sent;\n                console.log(allowanceReceipt);\n\n              case 14:\n                _context4.next = 16;\n                return contract.methods.tokenToEthSwapInput(_value, 1, DEADLINE).send({\n                  from: account\n                });\n\n              case 16:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 17:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function exchangeAtoB(_x2) {\n        return _exchangeAtoB.apply(this, arguments);\n      }\n\n      return exchangeAtoB;\n    }()\n  }, {\n    key: \"exchangeBtoA\",\n    value: function () {\n      var _exchangeBtoA = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(_ref3) {\n        var account, value, ether, _value, contract;\n\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                account = _ref3.account, value = _ref3.value, ether = _ref3.ether;\n                _value = this._getValue({\n                  value: value,\n                  ether: ether\n                });\n                _context5.next = 4;\n                return this.getContract();\n\n              case 4:\n                contract = _context5.sent;\n                return _context5.abrupt(\"return\", contract.methods.ethToTokenSwapInput(1, DEADLINE).send({\n                  from: account,\n                  value: _value\n                }));\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function exchangeBtoA(_x3) {\n        return _exchangeBtoA.apply(this, arguments);\n      }\n\n      return exchangeBtoA;\n    }()\n  }, {\n    key: \"estimateAtoB\",\n    value: function () {\n      var _estimateAtoB = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(value) {\n        var contract, output;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return this.getContract();\n\n              case 2:\n                contract = _context6.sent;\n                _context6.next = 5;\n                return contract.methods.getTokenToEthInputPrice(this._getValue(value)).call();\n\n              case 5:\n                output = _context6.sent;\n                return _context6.abrupt(\"return\", {\n                  estimate: output,\n                  estimateInfo: null\n                });\n\n              case 7:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function estimateAtoB(_x4) {\n        return _estimateAtoB.apply(this, arguments);\n      }\n\n      return estimateAtoB;\n    }()\n  }, {\n    key: \"estimateBtoA\",\n    value: function () {\n      var _estimateBtoA = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(value) {\n        var contract, output;\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                _context7.next = 2;\n                return this.getContract();\n\n              case 2:\n                contract = _context7.sent;\n                _context7.next = 5;\n                return contract.methods.getEthToTokenInputPrice(this._getValue(value)).call();\n\n              case 5:\n                output = _context7.sent;\n                return _context7.abrupt(\"return\", {\n                  estimate: output,\n                  estimateInfo: null\n                });\n\n              case 7:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function estimateBtoA(_x5) {\n        return _estimateBtoA.apply(this, arguments);\n      }\n\n      return estimateBtoA;\n    }()\n  }]);\n\n  return Uniswap;\n}(Pair);\n\nexport { Uniswap as default };","map":null,"metadata":{},"sourceType":"module"}