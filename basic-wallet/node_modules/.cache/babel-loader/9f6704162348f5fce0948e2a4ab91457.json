{"ast":null,"code":"import _defineProperty from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  min-height: 18px;\\n  margin: 8px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-bottom: 4px;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  flex: 1;\\n  display: flex;\\n  flex-direction: column;\\n  justify-content: flex-end;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 10px;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-bottom: 16px;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component, Fragment } from 'react';\nimport styled from 'styled-components';\nimport ExchangeInput from './ExchangeInput';\nvar FromContainer = styled.div(_templateObject());\nvar InputContainer = styled.div(_templateObject2());\nvar Bottom = styled.div(_templateObject3());\nvar ErrorBar = styled.div(_templateObject4());\nvar EstimateInfo = styled.div(_templateObject5());\n\nvar ExchangePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ExchangePage, _Component);\n\n  function ExchangePage(props) {\n    var _this;\n\n    _classCallCheck(this, ExchangePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ExchangePage).call(this, props));\n\n    var _this$props$plugin$ge = _this.props.plugin.getPairs(),\n        _this$props$plugin$ge2 = _slicedToArray(_this$props$plugin$ge, 1),\n        firstPair = _this$props$plugin$ge2[0];\n\n    _this.state = {\n      assetA: _this.props.plugin.getAsset(firstPair.assetA),\n      assetB: _this.props.plugin.getAsset(firstPair.assetB),\n      amount: '',\n      estimate: null,\n      estimateInfo: null,\n      isExchanging: false,\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(ExchangePage, [{\n    key: \"getPair\",\n    value: function getPair(assetA, assetB) {\n      var _this$props$plugin$ge3 = this.props.plugin.getPairs().filter(function (_pair) {\n        return _pair.assetA === assetA.id && _pair.assetB === assetB.id || _pair.assetA === assetB.id && _pair.assetB === assetA.id;\n      }),\n          _this$props$plugin$ge4 = _slicedToArray(_this$props$plugin$ge3, 1),\n          pair = _this$props$plugin$ge4[0];\n\n      return pair;\n    }\n  }, {\n    key: \"runExchange\",\n    value: function () {\n      var _runExchange = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this$state, assetA, assetB, amount, actions, pair, exchangeProps, loadingMessage, response;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$state = this.state, assetA = _this$state.assetA, assetB = _this$state.assetB, amount = _this$state.amount;\n                actions = this.props.actions;\n                pair = this.getPair(assetA, assetB);\n\n                if (pair) {\n                  _context.next = 5;\n                  break;\n                }\n\n                throw new Error('Invalid pair');\n\n              case 5:\n                exchangeProps = {\n                  account: this.props.defaultAccount,\n                  ether: amount\n                };\n                this.setState({\n                  isExchanging: true,\n                  error: null\n                });\n                _context.prev = 7;\n                loadingMessage = pair.getLoadingMessage();\n                actions.setLoading(loadingMessage);\n                _context.next = 12;\n                return pair.assetA === assetA.id ? pair.exchangeAtoB(exchangeProps) : pair.exchangeBtoA(exchangeProps);\n\n              case 12:\n                response = _context.sent;\n                _context.next = 20;\n                break;\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](7);\n                this.setState({\n                  error: _context.t0.message\n                });\n                actions.setLoading(null);\n                console.error(_context.t0);\n\n              case 20:\n                this.setState({\n                  isExchanging: false\n                });\n                actions.setLoading(null);\n\n              case 22:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[7, 15]]);\n      }));\n\n      function runExchange() {\n        return _runExchange.apply(this, arguments);\n      }\n\n      return runExchange;\n    }()\n  }, {\n    key: \"getEstimate\",\n    value: function () {\n      var _getEstimate = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(assetA, assetB, amount) {\n        var pair, estimate;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                pair = this.getPair(assetA, assetB);\n\n                if (pair) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                throw new Error('Invalid pair');\n\n              case 3:\n                _context2.prev = 3;\n                _context2.next = 6;\n                return pair.assetA === assetA.id ? pair.estimateAtoB({\n                  ether: amount\n                }) : pair.estimateBtoA({\n                  ether: amount\n                });\n\n              case 6:\n                estimate = _context2.sent;\n                return _context2.abrupt(\"return\", estimate);\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](3);\n                console.error(_context2.t0);\n                return _context2.abrupt(\"return\", {\n                  estimate: null,\n                  estimateInfo: null\n                });\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[3, 10]]);\n      }));\n\n      function getEstimate(_x, _x2, _x3) {\n        return _getEstimate.apply(this, arguments);\n      }\n\n      return getEstimate;\n    }()\n  }, {\n    key: \"getPairOptions\",\n    value: function getPairOptions(asset) {\n      var pairs = this.props.plugin.getPairs();\n      var options = [];\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = pairs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var pair = _step.value;\n\n          if (pair.assetA === asset.id) {\n            options.push(this.props.plugin.getAsset(pair.assetB));\n          }\n\n          if (pair.assetB === asset.id) {\n            options.push(this.props.plugin.getAsset(pair.assetA));\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return options;\n    }\n  }, {\n    key: \"update\",\n    value: function () {\n      var _update = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(_ref) {\n        var assetA, assetB, amount, update, options, start, _ref2, estimate, estimateInfo;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                assetA = _ref.assetA, assetB = _ref.assetB, amount = _ref.amount;\n                update = {\n                  estimate: null,\n                  estimateInfo: null\n                };\n\n                if (assetA) {\n                  update.assetA = assetA;\n                  options = this.getPairOptions(assetA);\n\n                  if (options.length > 0 && options.indexOf(this.state.assetB) === -1) {\n                    update.assetB = options[0];\n                  }\n                }\n\n                if (assetB) {\n                  update.assetB = assetB;\n                }\n\n                if (amount !== undefined) {\n                  update.amount = amount;\n                }\n\n                this.setState(update);\n                start = _objectSpread({}, this.state, {}, update);\n\n                if (start.amount) {\n                  _context3.next = 9;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\");\n\n              case 9:\n                _context3.next = 11;\n                return this.getEstimate(start.assetA, start.assetB, start.amount);\n\n              case 11:\n                _ref2 = _context3.sent;\n                estimate = _ref2.estimate;\n                estimateInfo = _ref2.estimateInfo;\n\n                if (this.state.assetA === start.assetA && this.state.assetB === start.assetB && this.state.amount === start.amount) {\n                  this.setState({\n                    estimate: estimate,\n                    estimateInfo: estimateInfo || null\n                  });\n                }\n\n              case 15:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function update(_x4) {\n        return _update.apply(this, arguments);\n      }\n\n      return update;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var burnerComponents = this.props.burnerComponents;\n      var _this$state2 = this.state,\n          assetA = _this$state2.assetA,\n          assetB = _this$state2.assetB,\n          amount = _this$state2.amount,\n          estimate = _this$state2.estimate,\n          isExchanging = _this$state2.isExchanging,\n          error = _this$state2.error,\n          estimateInfo = _this$state2.estimateInfo;\n      var Page = burnerComponents.Page,\n          AssetSelector = burnerComponents.AssetSelector,\n          Button = burnerComponents.Button;\n      var assetBOptions = this.getPairOptions(assetA);\n      var assetsProps = {\n        assets: assetBOptions\n      };\n      return React.createElement(Page, {\n        title: \"Exchange\"\n      }, React.createElement(InputContainer, null, React.createElement(ExchangeInput, {\n        input: amount,\n        inputUnit: assetA.name,\n        onChange: function onChange(newAmount) {\n          return _this2.update({\n            amount: newAmount\n          });\n        },\n        output: estimate ? assetB.getDisplayValue(estimate) : '',\n        outputUnit: assetB.name,\n        disabled: isExchanging\n      }), React.createElement(EstimateInfo, null, estimateInfo)), React.createElement(\"div\", null, React.createElement(FromContainer, null, React.createElement(\"div\", null, \"From:\"), React.createElement(AssetSelector, {\n        selected: assetA,\n        onChange: function onChange(newAsset) {\n          return _this2.update({\n            assetA: newAsset\n          });\n        },\n        disabled: isExchanging\n      })), assetBOptions.length > 0 ? React.createElement(Fragment, null, React.createElement(\"div\", null, \"To:\"), React.createElement(AssetSelector, Object.assign({\n        selected: assetB,\n        onChange: function onChange(newAsset) {\n          return _this2.update({\n            assetB: newAsset\n          });\n        },\n        disabled: isExchanging\n      }, assetsProps))) : React.createElement(\"div\", null, \"No exchanges available for \", assetA.name)), React.createElement(Bottom, null, React.createElement(ErrorBar, null, error), !isExchanging && React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.runExchange();\n        },\n        disabled: isExchanging || assetBOptions.length === 0\n      }, \"Exchange\")));\n    }\n  }]);\n\n  return ExchangePage;\n}(Component);\n\nexport { ExchangePage as default };","map":null,"metadata":{},"sourceType":"module"}