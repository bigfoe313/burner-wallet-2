{"ast":null,"code":"import _slicedToArray from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  flex: 1;\\n  color: #b91919;\\n  font-size: 18px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport { useBurner } from '@burner-wallet/ui-core';\nimport styled from 'styled-components';\nimport Address from '../../components/Address';\nimport Button from '../../components/Button';\nimport Page from '../../components/Page';\nimport LineItem from '../../components/LineItem';\nconst Toolbar = styled.div(_templateObject());\nconst ErrorMessage = styled.div(_templateObject2());\n\nconst ConfirmPage = ({\n  history\n}) => {\n  const _useBurner = useBurner(),\n        BurnerComponents = _useBurner.BurnerComponents,\n        assets = _useBurner.assets,\n        actions = _useBurner.actions,\n        pluginData = _useBurner.pluginData,\n        t = _useBurner.t;\n\n  const PluginElements = BurnerComponents.PluginElements;\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        error = _useState2[0],\n        setError = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        sending = _useState4[0],\n        _setSending = _useState4[1];\n\n  const setSending = isSending => {\n    _setSending(isSending);\n\n    actions.setLoading(isSending ? 'Sending...' : null);\n  };\n\n  if (!history.location.state) {\n    history.replace('/send');\n    return null;\n  }\n\n  const _history$location$sta = history.location.state,\n        to = _history$location$sta.to,\n        from = _history$location$sta.from,\n        ether = _history$location$sta.ether,\n        value = _history$location$sta.value,\n        assetId = _history$location$sta.asset,\n        message = _history$location$sta.message,\n        id = _history$location$sta.id;\n\n  const _assets$filter = assets.filter(a => a.id === assetId),\n        _assets$filter2 = _slicedToArray(_assets$filter, 1),\n        asset = _assets$filter2[0];\n\n  const amount = ether || asset.getDisplayValue(value);\n\n  const send = async () => {\n    setSending(true);\n    setError(null);\n\n    try {\n      actions.setLoading('Sending...');\n      const receipt = await asset.send({\n        from,\n        to,\n        ether,\n        value,\n        message\n      });\n      actions.setLoading(null);\n      const redirect = pluginData.sent({\n        asset: assetId,\n        from,\n        to,\n        ether: amount,\n        message,\n        receipt,\n        hash: receipt.transactionHash,\n        id\n      });\n      history.push(redirect || \"/receipt/\".concat(asset.id, \"/\").concat(receipt.transactionHash));\n    } catch (err) {\n      setError(\"Error: \".concat(err.message));\n      setSending(false);\n      console.error(err);\n    }\n  };\n\n  return React.createElement(Page, {\n    title: t('Confirm')\n  }, React.createElement(PluginElements, {\n    position: \"confirm-top\",\n    tx: history.location.state\n  }), React.createElement(LineItem, {\n    name: t('From')\n  }, React.createElement(Address, {\n    address: from\n  })), React.createElement(LineItem, {\n    name: t('To')\n  }, React.createElement(Address, {\n    address: to\n  })), React.createElement(LineItem, {\n    name: t('Amount'),\n    value: \"\".concat(amount, \" \").concat(asset.name)\n  }), message && React.createElement(LineItem, {\n    name: t('Note'),\n    value: message\n  }), React.createElement(PluginElements, {\n    position: \"confirm-middle\",\n    tx: history.location.state\n  }), React.createElement(Toolbar, null, React.createElement(ErrorMessage, null, error), React.createElement(Button, {\n    disabled: sending,\n    onClick: () => history.goBack()\n  }, t('Cancel')), React.createElement(Button, {\n    disabled: sending,\n    onClick: send\n  }, t('Send'))), React.createElement(PluginElements, {\n    position: \"confirm-bottom\",\n    tx: history.location.state\n  }));\n};\n\nexport default ConfirmPage;","map":null,"metadata":{},"sourceType":"module"}