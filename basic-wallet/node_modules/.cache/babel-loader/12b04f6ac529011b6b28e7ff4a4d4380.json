{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';import*as serviceWorker from'./serviceWorker';import{ERC20Asset,xdai,dai,eth}from'@burner-wallet/assets';import BurnerCore from'@burner-wallet/core';import{InjectedSigner,LocalSigner}from'@burner-wallet/core/signers';import{InfuraGateway,InjectedGateway,XDaiGateway}from'@burner-wallet/core/gateways';import Exchange,{Uniswap,XDaiBridge}from'@burner-wallet/exchange';import ModernUI from'@burner-wallet/modern-ui';import ENSPlugin from'@burner-wallet/ens-plugin';import MetamaskPlugin from'@burner-wallet/metamask-plugin';import{BurnerConnectPlugin}from'@burner-wallet/burner-connect-wallet';import'worker-loader?name=burnerprovider.js!./burnerconnect';// eslint-disable-line import/no-webpack-loader-syntax\nimport MyPlugin from'my-plugin';var ACASH=new ERC20Asset({id:'ACASH',name:'Africana Coin',network:'42',icon:'logo.png',address:'0xB9B72750e21C52589414c51B11F99f9D7f36A5F2'});var core=new BurnerCore({signers:[new LocalSigner(),new InjectedSigner()],gateways:[new InjectedGateway(),new InfuraGateway(process.env.REACT_APP_INFURA_KEY),new XDaiGateway()],assets:[ACASH,xdai,dai,eth]});var exchange=new Exchange([new XDaiBridge(),new Uniswap('dai')]);var BurnerWallet=function BurnerWallet(){return React.createElement(ModernUI,{title:\"A-Cash Wallet\",core:core,plugins:[exchange,new ENSPlugin(),new MetamaskPlugin(),new BurnerConnectPlugin('Basic Wallet'),new MyPlugin()]});};ReactDOM.render(React.createElement(BurnerWallet,null),document.getElementById('root'));// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/aforbers/burner-wallet-2/basic-wallet/src/index.tsx"],"names":["React","ReactDOM","serviceWorker","ERC20Asset","xdai","dai","eth","BurnerCore","InjectedSigner","LocalSigner","InfuraGateway","InjectedGateway","XDaiGateway","Exchange","Uniswap","XDaiBridge","ModernUI","ENSPlugin","MetamaskPlugin","BurnerConnectPlugin","MyPlugin","ACASH","id","name","network","icon","address","core","signers","gateways","process","env","REACT_APP_INFURA_KEY","assets","exchange","BurnerWallet","render","document","getElementById","unregister"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,GAAKC,CAAAA,aAAZ,KAA+B,iBAA/B,CACA,OAASC,UAAT,CAAqBC,IAArB,CAA2BC,GAA3B,CAAgCC,GAAhC,KAA2C,uBAA3C,CACA,MAAOC,CAAAA,UAAP,KAAuB,qBAAvB,CACA,OAASC,cAAT,CAAyBC,WAAzB,KAA4C,6BAA5C,CACA,OAASC,aAAT,CAAwBC,eAAxB,CAAyCC,WAAzC,KAA6D,8BAA7D,CACA,MAAOC,CAAAA,QAAP,EAAmBC,OAAnB,CAA4BC,UAA5B,KAA8C,yBAA9C,CACA,MAAOC,CAAAA,QAAP,KAAqB,0BAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,2BAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,gCAA3B,CACA,OAASC,mBAAT,KAAoC,sCAApC,CACA,MAAO,sDAAP,CAA+D;AAC/D,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CAEA,GAAMC,CAAAA,KAAK,CAAG,GAAIlB,CAAAA,UAAJ,CAAe,CAC3BmB,EAAE,CAAE,OADuB,CAE3BC,IAAI,CAAE,eAFqB,CAG3BC,OAAO,CAAE,IAHkB,CAI3BC,IAAI,CAAE,UAJqB,CAK3BC,OAAO,CAAE,4CALkB,CAAf,CAAd,CAQA,GAAMC,CAAAA,IAAI,CAAG,GAAIpB,CAAAA,UAAJ,CAAe,CAC1BqB,OAAO,CAAE,CACP,GAAInB,CAAAA,WAAJ,EADO,CAEP,GAAID,CAAAA,cAAJ,EAFO,CADiB,CAK1BqB,QAAQ,CAAE,CACR,GAAIlB,CAAAA,eAAJ,EADQ,CAER,GAAID,CAAAA,aAAJ,CAAkBoB,OAAO,CAACC,GAAR,CAAYC,oBAA9B,CAFQ,CAGR,GAAIpB,CAAAA,WAAJ,EAHQ,CALgB,CAU1BqB,MAAM,CAAE,CAACZ,KAAD,CAAQjB,IAAR,CAAcC,GAAd,CAAmBC,GAAnB,CAVkB,CAAf,CAAb,CAaA,GAAM4B,CAAAA,QAAQ,CAAG,GAAIrB,CAAAA,QAAJ,CAAa,CAAC,GAAIE,CAAAA,UAAJ,EAAD,CAAmB,GAAID,CAAAA,OAAJ,CAAY,KAAZ,CAAnB,CAAb,CAAjB,CAEA,GAAMqB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,SACnB,qBAAC,QAAD,EACE,KAAK,CAAC,eADR,CAEE,IAAI,CAAER,IAFR,CAGE,OAAO,CAAE,CACPO,QADO,CAEP,GAAIjB,CAAAA,SAAJ,EAFO,CAGP,GAAIC,CAAAA,cAAJ,EAHO,CAIP,GAAIC,CAAAA,mBAAJ,CAAwB,cAAxB,CAJO,CAKP,GAAIC,CAAAA,QAAJ,EALO,CAHX,EADmB,EAArB,CAeAnB,QAAQ,CAACmC,MAAT,CAAgB,oBAAC,YAAD,MAAhB,CAAkCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAlC,EAEA;AACA;AACA;AACApC,aAAa,CAACqC,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { ERC20Asset, xdai, dai, eth } from '@burner-wallet/assets';\nimport BurnerCore from '@burner-wallet/core';\nimport { InjectedSigner, LocalSigner } from '@burner-wallet/core/signers';\nimport { InfuraGateway, InjectedGateway, XDaiGateway, } from '@burner-wallet/core/gateways';\nimport Exchange, { Uniswap, XDaiBridge } from '@burner-wallet/exchange';\nimport ModernUI from '@burner-wallet/modern-ui';\nimport ENSPlugin from '@burner-wallet/ens-plugin';\nimport MetamaskPlugin from '@burner-wallet/metamask-plugin';\nimport { BurnerConnectPlugin } from '@burner-wallet/burner-connect-wallet';\nimport 'worker-loader?name=burnerprovider.js!./burnerconnect'; // eslint-disable-line import/no-webpack-loader-syntax\nimport MyPlugin from 'my-plugin';\n\nconst ACASH = new ERC20Asset({\n  id: 'ACASH',\n  name: 'Africana Coin',\n  network: '42',\n  icon: 'logo.png',\n  address: '0xB9B72750e21C52589414c51B11F99f9D7f36A5F2',\n});\n\nconst core = new BurnerCore({\n  signers: [\n    new LocalSigner(),\n    new InjectedSigner(),\n  ],\n  gateways: [\n    new InjectedGateway(),\n    new InfuraGateway(process.env.REACT_APP_INFURA_KEY),\n    new XDaiGateway(),\n  ],\n  assets: [ACASH, xdai, dai, eth],\n});\n\nconst exchange = new Exchange([new XDaiBridge(), new Uniswap('dai')]);\n\nconst BurnerWallet = () =>\n  <ModernUI\n    title=\"A-Cash Wallet\"\n    core={core}\n    plugins={[\n      exchange,\n      new ENSPlugin(),\n      new MetamaskPlugin(),\n      new BurnerConnectPlugin('Basic Wallet'),\n      new MyPlugin(),\n    ]}\n  />\n\n\n\nReactDOM.render(<BurnerWallet />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}