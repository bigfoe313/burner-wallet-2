{"ast":null,"code":"const HistoryEvent = require('./HistoryEvent');\n\nconst STORAGE_KEY = 'burner-history';\n\nclass History {\n  constructor({\n    storeHistory = true,\n    assets = []\n  } = {}) {\n    this.events = [];\n    this.eventsByTx = {};\n    this.eventsById = {};\n    this.assets = assets;\n    this.eventListeners = [];\n    this.storeHistory = storeHistory;\n\n    if (storeHistory) {\n      this.readStoredEvents();\n    }\n  }\n\n  onEvent(callback) {\n    this.eventListeners.push(callback);\n  }\n\n  removeListener(callback) {\n    this.eventListeners.splice(this.eventListeners.indexOf(callback), 1);\n  }\n\n  addEvent(event) {\n    if (this.eventsById[event.id]) {\n      console.warn(\"[History] Tried to add event with duplicate ID \".concat(event.id, \". Ignoring.\"));\n      return;\n    }\n\n    if (this.eventsByTx[event.tx]) {\n      if (event.override) {\n        this.events = this.events.filter(event => event.tx !== event.tx);\n      } else {\n        console.warn(\"[History] Duplicate event with TX hash \".concat(event.tx, \". Ignoring.\"));\n        return;\n      }\n    }\n\n    this.events.push(event);\n    this.eventsById[event.id] = event;\n    this.eventsByTx[event.tx] = event;\n    this.eventListeners.forEach(callback => callback(event));\n    this.storeEvents();\n  }\n\n  getEvents(options = {}) {\n    let assets;\n\n    if (options.assets) {\n      assets = options.assets;\n    } else if (options.asset) {\n      assets = [options.asset];\n    }\n\n    const filter = event => {\n      const assetMatch = !assets || assets.indexOf(event.asset) !== -1;\n      const typeMatch = !options.type || event.type === options.type;\n      const accountMatch = !options.account || options.account.toLowerCase() === event.to.toLowerCase() || options.account.toLowerCase() === event.from.toLowerCase();\n      return assetMatch && typeMatch && accountMatch;\n    };\n\n    return this.events.filter(filter).sort((e1, e2) => e2.timestamp - e1.timestamp);\n  }\n\n  storeEvents() {\n    if (this.storeHistory) {\n      window.localStorage.setItem(STORAGE_KEY, JSON.stringify(this.events));\n    }\n  }\n\n  readStoredEvents() {\n    if (window.localStorage.getItem(STORAGE_KEY)) {\n      const storedEventObjs = JSON.parse(window.localStorage.getItem(STORAGE_KEY));\n      this.events = [...this.events, ...storedEventObjs.map(event => new HistoryEvent(event, this.assets))];\n      this.events.forEach(event => {\n        this.eventsById[event.id] = event;\n      });\n    }\n  }\n\n}\n\nmodule.exports = History;","map":null,"metadata":{},"sourceType":"script"}