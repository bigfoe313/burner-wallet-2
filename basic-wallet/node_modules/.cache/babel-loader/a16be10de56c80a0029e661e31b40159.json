{"ast":null,"code":"import _regeneratorRuntime from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { withBurner, SubProvider } from './BurnerProvider';\nimport i18n from './i18n';\n\nvar wrapComponent = function wrapComponent(Component, plugin) {\n  var WrappedComponent = function WrappedComponent(props) {\n    var _useTranslation = useTranslation(plugin.id),\n        t = _useTranslation.t;\n\n    var InnerWrappedComponent = withBurner(Component);\n    return React.createElement(SubProvider, {\n      t: t\n    }, React.createElement(InnerWrappedComponent, Object.assign({\n      plugin: plugin\n    }, props)));\n  };\n\n  return WrappedComponent;\n};\n\nexport var DEFAULT_PLUGIN_DATA = {\n  pages: [],\n  buttons: {},\n  elements: {},\n  accountSearches: [],\n  tryHandleQR: function tryHandleQR() {\n    return false;\n  },\n  sent: function sent() {\n    return null;\n  },\n  getAddressName: function getAddressName() {\n    return Promise.resolve(null);\n  },\n  startup: function startup() {\n    return null;\n  }\n};\n\nvar Plugins =\n/*#__PURE__*/\nfunction () {\n  function Plugins(plugins, ui) {\n    var _this = this;\n\n    _classCallCheck(this, Plugins);\n\n    this.changeListeners = [];\n    this.qrHandlers = [];\n    this.startupListeners = [];\n    this.sentHandlers = [];\n    this.addressToNameResolvers = [];\n    this.messageListeners = {};\n    this.ui = ui;\n    this.pluginData = _objectSpread({}, DEFAULT_PLUGIN_DATA, {\n      tryHandleQR: this.tryHandleQR.bind(this),\n      sent: this.sent.bind(this),\n      getAddressName: this.getAddressName.bind(this),\n      startup: this.startup.bind(this)\n    });\n    plugins.forEach(function (plugin) {\n      return plugin.initializePlugin(_this.getPluginContext(plugin));\n    });\n  }\n\n  _createClass(Plugins, [{\n    key: \"onDataChange\",\n    value: function onDataChange(listener) {\n      this.changeListeners.push(listener);\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      return this.pluginData;\n    }\n  }, {\n    key: \"getPluginContext\",\n    value: function getPluginContext(plugin) {\n      var _this2 = this;\n\n      return {\n        addElement: function addElement(position, Component, options) {\n          return _this2.addPluginElement(plugin, position, Component, options);\n        },\n        onAccountSearch: function onAccountSearch(callback) {\n          return _this2.addAccountSearch(callback);\n        },\n        onQRScanned: function onQRScanned(callback) {\n          return void _this2.qrHandlers.push(callback);\n        },\n        onSent: function onSent(callback) {\n          return void _this2.sentHandlers.push(callback);\n        },\n        addPage: function addPage(path, Component) {\n          return _this2.addPluginPage(plugin, path, Component);\n        },\n        addButton: function addButton(position, title, path, options) {\n          return _this2.addPluginButton(plugin, position, title, path, options);\n        },\n        addHomeButton: function addHomeButton(title, path, options) {\n          return _this2.addPluginButton(plugin, 'home', title, path, options);\n        },\n        addAddressToNameResolver: function addAddressToNameResolver(callback) {\n          return _this2.addressToNameResolvers.push(callback);\n        },\n        addTranslations: function addTranslations(translations) {\n          return _this2.addTranslations(plugin, translations);\n        },\n        getAssets: function getAssets() {\n          return _this2.ui.getAssets();\n        },\n        getWeb3: function getWeb3(network, options) {\n          return _this2.ui.getCore().getWeb3(network, options);\n        },\n        sendPluginMessage: function sendPluginMessage(topic) {\n          for (var _len = arguments.length, message = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            message[_key - 1] = arguments[_key];\n          }\n\n          return (_this2.messageListeners[topic] || []).map(function (listener) {\n            return listener.apply(void 0, message);\n          });\n        },\n        onPluginMessage: function onPluginMessage(topic, listener) {\n          return _this2.addMessageListener(topic, listener);\n        },\n        onStartup: function onStartup(listener) {\n          return void _this2.startupListeners.push(listener);\n        }\n      };\n    }\n  }, {\n    key: \"setPluginData\",\n    value: function setPluginData(newData) {\n      var _this3 = this;\n\n      this.pluginData = _objectSpread({}, this.pluginData, {}, newData);\n      this.changeListeners.forEach(function (listener) {\n        return listener(_this3.pluginData);\n      });\n    }\n  }, {\n    key: \"addPluginPage\",\n    value: function addPluginPage(plugin, path, Component) {\n      var WrappedComponent = wrapComponent(Component, plugin);\n      this.setPluginData({\n        pages: [].concat(_toConsumableArray(this.pluginData.pages), [{\n          plugin: plugin,\n          path: path,\n          Component: WrappedComponent\n        }])\n      });\n    }\n  }, {\n    key: \"addPluginButton\",\n    value: function addPluginButton(plugin, position, title, path, options) {\n      var _this4 = this;\n\n      var existingButtons = this.pluginData.buttons[position] || [];\n      var newButton = {\n        plugin: plugin,\n        title: title,\n        path: path,\n        options: options\n      };\n      this.setPluginData({\n        buttons: _objectSpread({}, this.pluginData.buttons, _defineProperty({}, position, [].concat(_toConsumableArray(existingButtons), [newButton])))\n      });\n      var hasRemoved = false;\n\n      var remove = function remove() {\n        if (hasRemoved) {\n          throw new Error('This button has already been removed');\n        }\n\n        _this4.setPluginData({\n          buttons: _objectSpread({}, _this4.pluginData.buttons, _defineProperty({}, position, _this4.pluginData.buttons[position].filter(function (button) {\n            return button !== newButton;\n          })))\n        });\n\n        hasRemoved = true;\n      };\n\n      return {\n        remove: remove\n      };\n    }\n  }, {\n    key: \"addPluginElement\",\n    value: function addPluginElement(plugin, position, Component, options) {\n      var WrappedComponent = wrapComponent(Component, plugin);\n      var existingElements = this.pluginData.elements[position] || [];\n      this.setPluginData({\n        elements: _objectSpread({}, this.pluginData.elements, _defineProperty({}, position, [].concat(_toConsumableArray(existingElements), [{\n          plugin: plugin,\n          Component: WrappedComponent,\n          options: options\n        }])))\n      });\n    }\n  }, {\n    key: \"addTranslations\",\n    value: function addTranslations(plugin, translations) {\n      if (!plugin.id) {\n        throw new Error('Can not add translations without plugin ID');\n      }\n\n      Object.entries(translations).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            lang = _ref2[0],\n            resources = _ref2[1];\n\n        return i18n.addResources(lang, plugin.id, resources);\n      });\n    }\n  }, {\n    key: \"addAccountSearch\",\n    value: function addAccountSearch(callback) {\n      this.setPluginData({\n        accountSearches: [].concat(_toConsumableArray(this.pluginData.accountSearches), [callback])\n      });\n    }\n  }, {\n    key: \"addMessageListener\",\n    value: function addMessageListener(topic, callback) {\n      this.messageListeners[topic] = [].concat(_toConsumableArray(this.messageListeners[topic] || []), [callback]);\n    }\n  }, {\n    key: \"getAddressName\",\n    value: function () {\n      var _getAddressName = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(address) {\n        var _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, resolver, name;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _iteratorNormalCompletion = true;\n                _didIteratorError = false;\n                _iteratorError = undefined;\n                _context.prev = 3;\n                _iterator = this.addressToNameResolvers[Symbol.iterator]();\n\n              case 5:\n                if (_iteratorNormalCompletion = (_step = _iterator.next()).done) {\n                  _context.next = 15;\n                  break;\n                }\n\n                resolver = _step.value;\n                _context.next = 9;\n                return resolver(address);\n\n              case 9:\n                name = _context.sent;\n\n                if (!name) {\n                  _context.next = 12;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", name);\n\n              case 12:\n                _iteratorNormalCompletion = true;\n                _context.next = 5;\n                break;\n\n              case 15:\n                _context.next = 21;\n                break;\n\n              case 17:\n                _context.prev = 17;\n                _context.t0 = _context[\"catch\"](3);\n                _didIteratorError = true;\n                _iteratorError = _context.t0;\n\n              case 21:\n                _context.prev = 21;\n                _context.prev = 22;\n\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n\n              case 24:\n                _context.prev = 24;\n\n                if (!_didIteratorError) {\n                  _context.next = 27;\n                  break;\n                }\n\n                throw _iteratorError;\n\n              case 27:\n                return _context.finish(24);\n\n              case 28:\n                return _context.finish(21);\n\n              case 29:\n                return _context.abrupt(\"return\", null);\n\n              case 30:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[3, 17, 21, 29], [22,, 24, 28]]);\n      }));\n\n      function getAddressName(_x) {\n        return _getAddressName.apply(this, arguments);\n      }\n\n      return getAddressName;\n    }()\n  }, {\n    key: \"tryHandleQR\",\n    value: function tryHandleQR(qr, context) {\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.qrHandlers[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var handler = _step2.value;\n\n          if (handler(qr, context)) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"startup\",\n    value: function startup(context) {\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.startupListeners[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var handler = _step3.value;\n          handler(context);\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"sent\",\n    value: function sent(data) {\n      var redirect = null;\n      var _iteratorNormalCompletion4 = true;\n      var _didIteratorError4 = false;\n      var _iteratorError4 = undefined;\n\n      try {\n        for (var _iterator4 = this.sentHandlers[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n          var listener = _step4.value;\n          var response = listener(data);\n\n          if (!redirect && response && response.length) {\n            redirect = response;\n          }\n        }\n      } catch (err) {\n        _didIteratorError4 = true;\n        _iteratorError4 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n            _iterator4.return();\n          }\n        } finally {\n          if (_didIteratorError4) {\n            throw _iteratorError4;\n          }\n        }\n      }\n\n      return redirect;\n    }\n  }]);\n\n  return Plugins;\n}();\n\nexport { Plugins as default };","map":null,"metadata":{},"sourceType":"module"}