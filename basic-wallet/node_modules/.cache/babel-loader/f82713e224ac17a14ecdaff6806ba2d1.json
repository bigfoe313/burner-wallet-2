{"ast":null,"code":"import _regeneratorRuntime from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport './loaderDefs';\nimport 'file-loader?name=burnerconnect-bridge.html!./burnerconnect-bridge.html';\nimport 'file-loader?name=burnerconnect-login.html!./burnerconnect-login.html';\n\nvar serializeAsset = function serializeAsset(asset) {\n  return {\n    id: asset.id,\n    name: asset.name,\n    network: asset.network,\n    type: asset.type,\n    icon: asset.icon,\n    address: asset.address || null\n  };\n};\n\nif (window.opener && window.opener.origin === window.origin) {\n  window.opener.postMessage({\n    localStorage: _objectSpread({}, localStorage)\n  }, window.origin);\n}\n\nvar isSafari = /^((?!chrome|android).)*safari/i.test(window.navigator.userAgent);\n\nvar BunerConnectBridge =\n/*#__PURE__*/\nfunction () {\n  function BunerConnectBridge(core) {\n    var _this = this;\n\n    _classCallCheck(this, BunerConnectBridge);\n\n    this.core = core;\n    window.addEventListener('message',\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.handleMessage(event.data);\n\n              case 2:\n                response = _context.sent;\n                console.log('got', event.data, 'responding', response);\n\n                if (response) {\n                  event.source.postMessage({\n                    response: response,\n                    id: event.data.id\n                  }, event.origin);\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n    core.onAccountChange(function (accounts) {\n      window.parent.postMessage({\n        message: 'accountsChanged',\n        accounts: accounts\n      }, '*');\n    });\n\n    if (window.parent) {\n      window.parent.postMessage({\n        message: 'frameLoaded'\n      }, '*');\n    }\n  }\n\n  _createClass(BunerConnectBridge, [{\n    key: \"handleMessage\",\n    value: function handleMessage(_ref2) {\n      var command = _ref2.command,\n          params = _ref2.params,\n          id = _ref2.id;\n\n      switch (command) {\n        case 'send':\n          return this.send(id, params);\n\n        case 'getAssets':\n          return this.core.getAssets().map(serializeAsset);\n\n        case 'requiresPopup':\n          return isSafari;\n\n        case 'popup':\n          return this.awaitPopup();\n\n        default:\n          if (command) {\n            console.error(\"Unknown command \".concat(command));\n          }\n\n      }\n    }\n  }, {\n    key: \"send\",\n    value: function send(id, _ref3) {\n      var _this2 = this;\n\n      var jsonrpc = _ref3.jsonrpc,\n          network = _ref3.network,\n          method = _ref3.method,\n          params = _ref3.params;\n      return new Promise(function (resolve, reject) {\n        var provider = _this2.core.getProvider(network);\n\n        provider.sendAsync({\n          jsonrpc: jsonrpc,\n          id: id,\n          method: method,\n          params: params\n        }, function (err, result) {\n          if (err) {\n            return reject(err);\n          }\n\n          resolve(result);\n        });\n      });\n    }\n  }, {\n    key: \"awaitPopup\",\n    value: function awaitPopup() {\n      var _this3 = this;\n\n      return new Promise(function (resolve) {\n        var content = document.querySelector('#content');\n        content.innerHTML = '';\n        var button = document.createElement('button');\n        button.innerText = 'Connect';\n        content.appendChild(button);\n        button.addEventListener('click', function () {\n          var popup = null;\n\n          var listener = function listener(e) {\n            if (e.data.localStorage) {\n              console.log('Got localstorage', e.data.localStorage);\n\n              _this3.batchSetLocalstorage(e.data.localStorage);\n\n              popup.close();\n              resolve({\n                success: true\n              });\n              window.removeEventListener('message', listener);\n            }\n          };\n\n          window.addEventListener('message', listener);\n          popup = window.open(window.location.href, '_blank');\n        });\n        window.parent.postMessage({\n          message: 'setSize',\n          height: document.body.clientHeight\n        }, '*');\n      });\n    }\n  }, {\n    key: \"batchSetLocalstorage\",\n    value: function batchSetLocalstorage(storage) {\n      for (var key in storage) {\n        window.localStorage.setItem(key, storage[key]);\n      }\n    }\n  }]);\n\n  return BunerConnectBridge;\n}();\n\nexport { BunerConnectBridge as default };","map":null,"metadata":{},"sourceType":"module"}