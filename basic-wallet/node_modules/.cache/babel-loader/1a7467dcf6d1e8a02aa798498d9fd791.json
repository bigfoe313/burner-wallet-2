{"ast":null,"code":"var _jsxFileName = \"/home/aforbers/burner-wallet-2/basic-wallet/src/index.tsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { xdai, dai, eth } from '@burner-wallet/assets';\nimport BurnerCore from '@burner-wallet/core';\nimport { InjectedSigner, LocalSigner } from '@burner-wallet/core/signers';\nimport { InfuraGateway, InjectedGateway, XDaiGateway } from '@burner-wallet/core/gateways';\nimport Exchange, { Uniswap, XDaiBridge } from '@burner-wallet/exchange';\nimport ModernUI from '@burner-wallet/modern-ui';\nimport ENSPlugin from '@burner-wallet/ens-plugin';\nimport MetamaskPlugin from '@burner-wallet/metamask-plugin';\nimport { BurnerConnectPlugin } from '@burner-wallet/burner-connect-wallet';\nimport 'worker-loader?name=burnerprovider.js!./burnerconnect'; // eslint-disable-line import/no-webpack-loader-syntax\n\nconst core = new BurnerCore({\n  signers: [new LocalSigner(), new InjectedSigner()],\n  gateways: [new InjectedGateway(), new InfuraGateway(process.env.REACT_APP_INFURA_KEY), new XDaiGateway()],\n  assets: [xdai, dai, eth]\n});\nconst exchange = new Exchange([new XDaiBridge(), new Uniswap('dai')]);\n\nconst BurnerWallet = () => React.createElement(ModernUI, {\n  core: core,\n  plugins: [exchange, new ENSPlugin(), new MetamaskPlugin(), new BurnerConnectPlugin('Basic Wallet')],\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n});\n\nReactDOM.render(React.createElement(BurnerWallet, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 43\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/home/aforbers/burner-wallet-2/basic-wallet/src/index.tsx"],"names":["React","ReactDOM","serviceWorker","xdai","dai","eth","BurnerCore","InjectedSigner","LocalSigner","InfuraGateway","InjectedGateway","XDaiGateway","Exchange","Uniswap","XDaiBridge","ModernUI","ENSPlugin","MetamaskPlugin","BurnerConnectPlugin","core","signers","gateways","process","env","REACT_APP_INFURA_KEY","assets","exchange","BurnerWallet","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,QAA+B,uBAA/B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,6BAA5C;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,WAAzC,QAA6D,8BAA7D;AACA,OAAOC,QAAP,IAAmBC,OAAnB,EAA4BC,UAA5B,QAA8C,yBAA9C;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,cAAP,MAA2B,gCAA3B;AACA,SAASC,mBAAT,QAAoC,sCAApC;AACA,OAAO,sDAAP,C,CAA+D;;AAE/D,MAAMC,IAAI,GAAG,IAAIb,UAAJ,CAAe;AAC1Bc,EAAAA,OAAO,EAAE,CACP,IAAIZ,WAAJ,EADO,EAEP,IAAID,cAAJ,EAFO,CADiB;AAK1Bc,EAAAA,QAAQ,EAAE,CACR,IAAIX,eAAJ,EADQ,EAER,IAAID,aAAJ,CAAkBa,OAAO,CAACC,GAAR,CAAYC,oBAA9B,CAFQ,EAGR,IAAIb,WAAJ,EAHQ,CALgB;AAU1Bc,EAAAA,MAAM,EAAE,CAACtB,IAAD,EAAOC,GAAP,EAAYC,GAAZ;AAVkB,CAAf,CAAb;AAaA,MAAMqB,QAAQ,GAAG,IAAId,QAAJ,CAAa,CAAC,IAAIE,UAAJ,EAAD,EAAmB,IAAID,OAAJ,CAAY,KAAZ,CAAnB,CAAb,CAAjB;;AAEA,MAAMc,YAAY,GAAG,MACnB,oBAAC,QAAD;AACE,EAAA,IAAI,EAAER,IADR;AAEE,EAAA,OAAO,EAAE,CACPO,QADO,EAEP,IAAIV,SAAJ,EAFO,EAGP,IAAIC,cAAJ,EAHO,EAIP,IAAIC,mBAAJ,CAAwB,cAAxB,CAJO,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AAaAjB,QAAQ,CAAC2B,MAAT,CAAgB,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAkCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAlC,E,CAEA;AACA;AACA;;AACA5B,aAAa,CAAC6B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { xdai, dai, eth } from '@burner-wallet/assets';\nimport BurnerCore from '@burner-wallet/core';\nimport { InjectedSigner, LocalSigner } from '@burner-wallet/core/signers';\nimport { InfuraGateway, InjectedGateway, XDaiGateway, } from '@burner-wallet/core/gateways';\nimport Exchange, { Uniswap, XDaiBridge } from '@burner-wallet/exchange';\nimport ModernUI from '@burner-wallet/modern-ui';\nimport ENSPlugin from '@burner-wallet/ens-plugin';\nimport MetamaskPlugin from '@burner-wallet/metamask-plugin';\nimport { BurnerConnectPlugin } from '@burner-wallet/burner-connect-wallet';\nimport 'worker-loader?name=burnerprovider.js!./burnerconnect'; // eslint-disable-line import/no-webpack-loader-syntax\n\nconst core = new BurnerCore({\n  signers: [\n    new LocalSigner(),\n    new InjectedSigner(),\n  ],\n  gateways: [\n    new InjectedGateway(),\n    new InfuraGateway(process.env.REACT_APP_INFURA_KEY),\n    new XDaiGateway(),\n  ],\n  assets: [xdai, dai, eth],\n});\n\nconst exchange = new Exchange([new XDaiBridge(), new Uniswap('dai')]);\n\nconst BurnerWallet = () =>\n  <ModernUI\n    core={core}\n    plugins={[\n      exchange,\n      new ENSPlugin(),\n      new MetamaskPlugin(),\n      new BurnerConnectPlugin('Basic Wallet'),\n    ]}\n  />\n\n\n\nReactDOM.render(<BurnerWallet />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}