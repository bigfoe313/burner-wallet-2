{"ast":null,"code":"var _regeneratorRuntime = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _defineProperty = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _asyncToGenerator = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar Web3 = require('web3');\n\nvar Signer = require('./Signer');\n\nvar arrayEquals = function arrayEquals(a, b) {\n  return a.length === b.length && a.every(function (val, i) {\n    return val === b[i];\n  });\n};\n\nvar InjectedSigner =\n/*#__PURE__*/\nfunction (_Signer) {\n  \"use strict\";\n\n  _inherits(InjectedSigner, _Signer);\n\n  function InjectedSigner() {\n    var _this;\n\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref$autoEnable = _ref.autoEnable,\n        autoEnable = _ref$autoEnable === void 0 ? false : _ref$autoEnable,\n        _ref$provider = _ref.provider,\n        provider = _ref$provider === void 0 ? null : _ref$provider;\n\n    _classCallCheck(this, InjectedSigner);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(InjectedSigner).call(this, {\n      id: 'injected'\n    }));\n    _this.accounts = [];\n    _this._provider = provider;\n\n    var _provider = _this.provider();\n\n    if (_provider) {\n      _this.web3 = new Web3(_provider);\n\n      _this.updateAccounts();\n\n      if (autoEnable && _provider.enable) {\n        _this.enable();\n      }\n    }\n\n    return _this;\n  }\n\n  _createClass(InjectedSigner, [{\n    key: \"isAvailable\",\n    value: function isAvailable() {\n      return !!this.provider() && this.accounts.length > 0;\n    }\n  }, {\n    key: \"signTx\",\n    value: function () {\n      var _signTx = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(tx) {\n        var signedTransaction;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.web3.eth.signTransaction(tx);\n\n              case 2:\n                signedTransaction = _context.sent;\n                return _context.abrupt(\"return\", _objectSpread({}, tx, {\n                  signedTransaction: signedTransaction\n                }));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function signTx(_x) {\n        return _signTx.apply(this, arguments);\n      }\n\n      return signTx;\n    }()\n  }, {\n    key: \"signMsg\",\n    value: function signMsg(msg, account) {\n      return this.web3.eth.sign(msg, account);\n    }\n  }, {\n    key: \"shouldSkipSigning\",\n    value: function shouldSkipSigning(network) {\n      var isMetaMask = !!this.provider().isMetaMask;\n\n      if (isMetaMask && network !== this.provider().networkVersion) {\n        throw new Error('Metamask is connected to the wrong network');\n      }\n\n      return isMetaMask;\n    }\n  }, {\n    key: \"permissions\",\n    value: function permissions() {\n      var canEnable = this.accounts.length === 0 && (this.provider() || {}).enable;\n      return canEnable ? ['enable'] : [];\n    }\n  }, {\n    key: \"invoke\",\n    value: function invoke(action, account) {\n      switch (action) {\n        case 'enable':\n          return this.enable();\n\n        default:\n          throw new Error(\"Unknown action \".concat(action));\n      }\n    }\n  }, {\n    key: \"enable\",\n    value: function () {\n      var _enable = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.provider().enable();\n\n              case 2:\n                _context2.next = 4;\n                return this.updateAccounts();\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function enable() {\n        return _enable.apply(this, arguments);\n      }\n\n      return enable;\n    }()\n  }, {\n    key: \"updateAccounts\",\n    value: function () {\n      var _updateAccounts = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var accounts;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.web3.eth.getAccounts();\n\n              case 2:\n                accounts = _context3.sent;\n\n                if (!arrayEquals(accounts, this.accounts)) {\n                  this.accounts = accounts;\n                  this.events.emit('accountChange');\n                }\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function updateAccounts() {\n        return _updateAccounts.apply(this, arguments);\n      }\n\n      return updateAccounts;\n    }()\n  }, {\n    key: \"provider\",\n    value: function provider() {\n      return this._provider || window.ethereum || window.web3 && window.web3.currentProvider;\n    }\n  }]);\n\n  return InjectedSigner;\n}(Signer);\n\nmodule.exports = InjectedSigner;","map":null,"metadata":{},"sourceType":"script"}