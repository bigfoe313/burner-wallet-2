{"ast":null,"code":"var _slicedToArray = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _regeneratorRuntime = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _defineProperty = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _objectWithoutProperties = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectWithoutProperties\");\n\nvar _classCallCheck = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/aforbers/burner-wallet-2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar Asset = require('./Asset');\n\nvar IERC20abi = require('./abi/IERC20.json');\n\nvar BLOCK_LOOKBACK = 250;\nvar POLL_INTERVAL = 2500;\n\nvar ERC20Asset =\n/*#__PURE__*/\nfunction (_Asset) {\n  \"use strict\";\n\n  _inherits(ERC20Asset, _Asset);\n\n  function ERC20Asset(_ref) {\n    var _this;\n\n    var address = _ref.address,\n        _ref$abi = _ref.abi,\n        abi = _ref$abi === void 0 ? IERC20abi : _ref$abi,\n        _ref$pollInterval = _ref.pollInterval,\n        pollInterval = _ref$pollInterval === void 0 ? POLL_INTERVAL : _ref$pollInterval,\n        _ref$type = _ref.type,\n        type = _ref$type === void 0 ? 'erc20' : _ref$type,\n        params = _objectWithoutProperties(_ref, [\"address\", \"abi\", \"pollInterval\", \"type\"]);\n\n    _classCallCheck(this, ERC20Asset);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ERC20Asset).call(this, _objectSpread({}, params, {\n      type: type\n    })));\n    _this.address = address;\n    _this.abi = abi;\n    _this._pollInterval = pollInterval;\n    _this._contract = null;\n    return _this;\n  }\n\n  _createClass(ERC20Asset, [{\n    key: \"getBalance\",\n    value: function () {\n      var _getBalance = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(account) {\n        var balance;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.getContract().methods.balanceOf(account).call();\n\n              case 2:\n                balance = _context.sent;\n                return _context.abrupt(\"return\", balance.toString());\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getBalance(_x) {\n        return _getBalance.apply(this, arguments);\n      }\n\n      return getBalance;\n    }()\n  }, {\n    key: \"getContract\",\n    value: function getContract() {\n      if (!this._contract) {\n        var Contract = this.getWeb3().eth.Contract;\n        this._contract = new Contract(this.abi, this.address);\n      }\n\n      return this._contract;\n    }\n  }, {\n    key: \"allowance\",\n    value: function allowance(from, to) {\n      return this.getContract().methods.allowance(from, to).call();\n    }\n  }, {\n    key: \"approve\",\n    value: function approve(from, to, value) {\n      return this.getContract().methods.approve(to, value).send({\n        from: from\n      });\n    }\n  }, {\n    key: \"getTx\",\n    value: function () {\n      var _getTx = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(txHash) {\n        var events, _events$filter, _events$filter2, transferEvent;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this._getEventsFromTx(txHash);\n\n              case 2:\n                events = _context2.sent;\n                _events$filter = events.filter(function (event) {\n                  return event.event === 'Transfer';\n                }), _events$filter2 = _slicedToArray(_events$filter, 1), transferEvent = _events$filter2[0];\n\n                if (transferEvent) {\n                  _context2.next = 6;\n                  break;\n                }\n\n                return _context2.abrupt(\"return\", null);\n\n              case 6:\n                _context2.t0 = this.id;\n                _context2.t1 = this.name;\n                _context2.t2 = transferEvent.returnValues.from;\n                _context2.t3 = transferEvent.returnValues.to;\n                _context2.t4 = transferEvent.returnValues.value.toString();\n                _context2.t5 = this.getDisplayValue(transferEvent.returnValues.value.toString());\n                _context2.next = 14;\n                return this._getBlockTimestamp(transferEvent.blockNumber);\n\n              case 14:\n                _context2.t6 = _context2.sent;\n                return _context2.abrupt(\"return\", {\n                  asset: _context2.t0,\n                  assetName: _context2.t1,\n                  from: _context2.t2,\n                  to: _context2.t3,\n                  value: _context2.t4,\n                  displayValue: _context2.t5,\n                  message: null,\n                  timestamp: _context2.t6\n                });\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getTx(_x2) {\n        return _getTx.apply(this, arguments);\n      }\n\n      return getTx;\n    }()\n  }, {\n    key: \"startWatchingAddress\",\n    value: function startWatchingAddress(address) {\n      var _this2 = this;\n\n      var block = 0;\n      return this.poll(\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var currentBlock, events;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return _this2.getWeb3().eth.getBlockNumber();\n\n              case 2:\n                currentBlock = _context4.sent;\n\n                if (block === 0) {\n                  block = Math.max(currentBlock - BLOCK_LOOKBACK, 0);\n                }\n\n                _context4.next = 6;\n                return _this2.getContract().getPastEvents('Transfer', {\n                  filter: {\n                    to: address\n                  },\n                  fromBlock: block,\n                  toBlock: currentBlock\n                });\n\n              case 6:\n                events = _context4.sent;\n                _context4.next = 9;\n                return events.map(\n                /*#__PURE__*/\n                function () {\n                  var _ref3 = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee3(event) {\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            _context3.t0 = _this2.core;\n                            _context3.t1 = \"\".concat(event.transactionHash, \"-\").concat(event.logIndex);\n                            _context3.t2 = _this2.id;\n                            _context3.t3 = event.returnValues.value.toString();\n                            _context3.t4 = event.returnValues.from;\n                            _context3.t5 = event.returnValues.to;\n                            _context3.t6 = event.transactionHash;\n                            _context3.next = 9;\n                            return _this2._getBlockTimestamp(event.blockNumber);\n\n                          case 9:\n                            _context3.t7 = _context3.sent;\n                            _context3.t8 = {\n                              id: _context3.t1,\n                              asset: _context3.t2,\n                              type: 'send',\n                              value: _context3.t3,\n                              from: _context3.t4,\n                              to: _context3.t5,\n                              tx: _context3.t6,\n                              timestamp: _context3.t7\n                            };\n                            return _context3.abrupt(\"return\", _context3.t0.addHistoryEvent.call(_context3.t0, _context3.t8));\n\n                          case 12:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n\n                  return function (_x3) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n\n              case 9:\n                block = currentBlock;\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      })), this._pollInterval);\n    }\n  }, {\n    key: \"_getEventsFromTx\",\n    value: function () {\n      var _getEventsFromTx2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(txHash) {\n        var web3, receipt, events;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                web3 = this.getWeb3();\n                _context5.next = 3;\n                return web3.eth.getTransactionReceipt(txHash);\n\n              case 3:\n                receipt = _context5.sent;\n\n                if (receipt) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                return _context5.abrupt(\"return\", []);\n\n              case 6:\n                _context5.next = 8;\n                return this.getContract().getPastEvents('allEvents', {\n                  fromBlock: receipt.blockNumber,\n                  toBlock: receipt.blockNumber\n                });\n\n              case 8:\n                events = _context5.sent;\n                return _context5.abrupt(\"return\", events.filter(function (event) {\n                  return event.transactionHash === txHash;\n                }));\n\n              case 10:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function _getEventsFromTx(_x4) {\n        return _getEventsFromTx2.apply(this, arguments);\n      }\n\n      return _getEventsFromTx;\n    }()\n  }, {\n    key: \"_send\",\n    value: function () {\n      var _send2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(_ref4) {\n        var from, to, value, receipt;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                from = _ref4.from, to = _ref4.to, value = _ref4.value;\n                _context6.next = 3;\n                return this.getContract().methods.transfer(to, value).send({\n                  from: from\n                });\n\n              case 3:\n                receipt = _context6.sent;\n                return _context6.abrupt(\"return\", _objectSpread({}, receipt, {\n                  txHash: receipt.transactionHash,\n                  id: \"\".concat(receipt.transactionHash, \"-\").concat(receipt.events.Transfer.logIndex)\n                }));\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function _send(_x5) {\n        return _send2.apply(this, arguments);\n      }\n\n      return _send;\n    }()\n  }]);\n\n  return ERC20Asset;\n}(Asset);\n\nmodule.exports = ERC20Asset;","map":null,"metadata":{},"sourceType":"script"}